-- phpMyAdmin SQL Dump
-- version 4.7.4
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1:3306
-- Tiempo de generación: 15-10-2018 a las 05:23:24
-- Versión del servidor: 5.7.19
-- Versión de PHP: 7.1.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `is`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `evaluaciones`
--

DROP TABLE IF EXISTS `evaluaciones`;
CREATE TABLE IF NOT EXISTS `evaluaciones` (
  `id_eva` int(11) NOT NULL AUTO_INCREMENT,
  `eva_tit` varchar(100) DEFAULT NULL,
  `eva_des` varchar(200) DEFAULT NULL,
  `eva_url` varchar(200) NOT NULL,
  `eva_tim` time DEFAULT NULL,
  `eva_num_int` int(11) NOT NULL,
  `eva_tot` double(12,2) NOT NULL DEFAULT '100.00',
  `eva_prm` varchar(1) NOT NULL DEFAULT '0',
  `eva_pwr` varchar(100) NOT NULL,
  `eva_sta` int(11) DEFAULT '1',
  `id_sbt` int(11) DEFAULT NULL,
  `id_tem` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_eva`),
  KEY `IX_Relationship7` (`id_sbt`),
  KEY `IX_Relationship9` (`id_tem`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `evaluaciones`
--

INSERT INTO `evaluaciones` (`id_eva`, `eva_tit`, `eva_des`, `eva_url`, `eva_tim`, `eva_num_int`, `eva_tot`, `eva_prm`, `eva_pwr`, `eva_sta`, `id_sbt`, `id_tem`) VALUES
(11, 'Evaluación de herramientas Case', 'Realizar la Evaluación en el tiempo estimado', 'Evaluación-de-herramientas-Case', '00:05:00', 0, 100.00, '0', '123', 1, NULL, 9),
(12, 'Evaluación de Sistemas de Información ', 'Conteste todas las preguntas en el tiempo estimado', 'Evaluación-de-Sistemas-de-Información', '00:05:00', 0, 100.00, '0', '123', 1, NULL, 11);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `literales`
--

DROP TABLE IF EXISTS `literales`;
CREATE TABLE IF NOT EXISTS `literales` (
  `lit_cue` varchar(200) DEFAULT NULL,
  `lit_vin` varchar(4) DEFAULT NULL,
  `id_pre` int(11) DEFAULT NULL,
  KEY `IX_Relationship11` (`id_pre`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `literales`
--

INSERT INTO `literales` (`lit_cue`, `lit_vin`, `id_pre`) VALUES
('Computer Aided Software Engineering ', 'a', 30),
('Computer Aided System Engineerin', 'b', 30),
('Contol Aided Software Engineering ', 'c', 30),
('Control Aided System Engineering ', 'd', 30),
('La creación de actore', 'a', 31),
('La existencia de casos de uso ', 'b', 31),
('La existencia de entidades caracterizadas por atributos ', 'c', 31),
('La creación de usuarios ', 'd', 31),
('Herramientas CASE', 'a', 34),
('Herramientas de simulación', 'b', 34),
('Herramientas de diseño ', 'c', 34),
('Herramientas para interfaz ', 'd', 34),
('C++, PHP, C# o Java.', 'a', 35),
('C y C++', 'b', 35),
('Phyton, Java', 'c', 35),
('C++, Java, Phyton, C#, Php', 'd', 35),
('Basado en componentes', 'a', 36),
('Tradicional', 'b', 36),
('Cascada', 'c', 36),
(' Iterativo ', 'd', 36),
('Modelo Iterativo', 'a', 37),
('Modelos Cascada ', 'b', 37),
('Modelos de Proceso de Software', 'c', 37),
('Desarrollo basado en componentes', 'd', 37),
('Sistemas de procesamiento por lotes', 'a', 38),
('Aplicaciones basadas en transacciones interactivas', 'b', 38),
('Aplicaciones stand-alone', 'c', 38),
('Sistemas de controles embebidos ', 'd', 38),
('Verdadero', 'a', 39),
('Falso', 'b', 39),
('Verdadero', 'a', 40),
('Falso', 'b', 40);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `notas`
--

DROP TABLE IF EXISTS `notas`;
CREATE TABLE IF NOT EXISTS `notas` (
  `not_cal` double DEFAULT NULL,
  `id_use` int(11) DEFAULT NULL,
  `id_eva` int(11) DEFAULT NULL,
  KEY `IX_Relationship12` (`id_use`),
  KEY `IX_Relationship13` (`id_eva`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `post`
--

DROP TABLE IF EXISTS `post`;
CREATE TABLE IF NOT EXISTS `post` (
  `id_pos` int(11) NOT NULL AUTO_INCREMENT,
  `tit_pos` varchar(250) DEFAULT NULL,
  `des_pos` varchar(255) DEFAULT NULL,
  `cue_pos` text,
  `img_pos` varchar(100) DEFAULT NULL,
  `vid_pos` varchar(200) DEFAULT NULL,
  `url_pos` varchar(255) DEFAULT NULL,
  `sta_pos` varchar(1) DEFAULT '1',
  `id_use` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_pos`),
  KEY `IX_Relationship1` (`id_use`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `post`
--

INSERT INTO `post` (`id_pos`, `tit_pos`, `des_pos`, `cue_pos`, `img_pos`, `vid_pos`, `url_pos`, `sta_pos`, `id_use`) VALUES
(14, 'Paradigmas Orientados a Objetos y Artefactos UML', 'Dentro del proceso de desarrollo de sotware es importante el modelado de datos,  generalmente un sistema se compone de muchos módulos mismos que en ocasiones son dificiles de entender, para ello existen diagramas que ayudan a mejorar este proceso', '<p><strong>Introducci&oacute;n</strong></p>\r\n\r\n<p>La programaci&oacute;n orientada a objetos, es necesaria en la vida de un programador ya que con esta visualizamos las actividades de cada una de esas. Un objeto contiene toda la informaci&oacute;n que permite definirlo e identificarlo frente a otros objetos pertenecientes a otras clases e incluso frente a objetos de una misma clase, al poder tener valores bien diferenciados en sus atributos. A su vez, los objetos disponen de mecanismos de interacci&oacute;n llamados m&eacute;todos, que favorecen la comunicaci&oacute;n entre ellos. Esta comunicaci&oacute;n favorece a su vez el cambio de estado en los propios objetos. Esta caracter&iacute;stica lleva a tratarlos como unidades indivisibles, en las que no se separa el estado y el comportamiento. Wideo, es una plataforma de creaci&oacute;n de v&iacute;deo animados online que te permite crear, editar y compartir videos online de forma gratuita. Usted puede elegir (o cargar) im&aacute;genes, fondos, y la m&uacute;sica que desee utilizar con el fin de crear su propio video online y luego compartirlo con el mundo El presente trabajo detalla la informaci&oacute;n necesaria, obtenida mediante t&eacute;cnicas de recolecci&oacute;n de informaci&oacute;n sobre el paradigma de la programaci&oacute;n orientada a objetos, la cual se ver&aacute; reflejada en un video realizado mediante la herramienta Wideo, que permite desarrollar animaciones muy entretenidas.</p>\r\n\r\n<p><strong>Paradigma orientado a objetos</strong></p>\r\n\r\n<p>&ldquo;Hoy en d&iacute;a la tecnolog&iacute;a orientada a objetos ya no se aplica solamente a los lenguajes de programaci&oacute;n, adem&aacute;s se viene aplicando en el an&aacute;lisis y dise&ntilde;o con mucho &eacute;xito, al igual que en las bases de datos. Es que para hacer una buena programaci&oacute;n orientada a objetos hay que desarrollar todo el sistema aplicando esta tecnolog&iacute;a, de ah&iacute; la importancia del an&aacute;lisis y el dise&ntilde;o orientado a objetos. La programaci&oacute;n orientada a objetos es una de las formas m&aacute;s populares de programar y viene teniendo gran acogida en el desarrollo de proyectos de software desde los &uacute;ltimos a&ntilde;os. Esta acogida se debe a sus grandes capacidades y ventajas frente a las antiguas formas de programar.&rdquo; [1]</p>\r\n\r\n<p>&ldquo;La POO es un paradigma de la programaci&oacute;n de computadores; esto hace referencia al conjunto de teor&iacute;as, est&aacute;ndares, modelos y m&eacute;todos que permiten organizar el conocimiento, proporcionando un medio bien definido para visualizar el dominio del problema e implementar en un lenguaje de programaci&oacute;n la soluci&oacute;n a ese problema.&rdquo; [3]</p>\r\n\r\n<p>&ldquo;Los lenguajes de programaci&oacute;n proporcionan mecanismos para implementar una filosof&iacute;a o paradigma de programaci&oacute;n. Un paradigma es una forma de entender y representar la realidad: un conjunto de teor&iacute;as, est&aacute;ndares y m&eacute;todos que, juntos, representan un modo de organizar el pensamiento, es decir, un modo de ver el mundo. Cada nuevo paradigma responde a una necesidad real de nuevas formas de afrontar problemas. A menudo un nuevo paradigma es creado como respuesta a las deficiencias de paradigmas anteriores.</p>\r\n\r\n<p>Un paradigma de programaci&oacute;n es una forma de conceptualizar en qu&eacute; consiste la ejecuci&oacute;n de un programa y c&oacute;mo deben de estructurarse y organizarse las tareas que se llevaran a cabo en esa ejecuci&oacute;n.&rdquo; [4]</p>\r\n\r\n<p>Es importante remarcar que UML es un &quot;lenguaje de modelado&quot; para especificar o para describir m&eacute;todos o procesos. Se utiliza para definir un sistema, para detallar los artefactos en el sistema y para documentar y construir. En otras palabras, es el lenguaje en el que est&aacute; descrito el modelo</p>\r\n\r\n<p>&ldquo;<strong>Herencia</strong> Es una propiedad que permite que los objetos sean creados a partir de otros ya existentes, obteniendo caracter&iacute;sticas (m&eacute;todos y atributos) similares a los ya existentes. Es la relaci&oacute;n entre una clase general y otra clase m&aacute;s espec&iacute;fica. Es un mecanismo que nos permite crear clases derivadas a partir de clase base, Nos permite compartir autom&aacute;ticamente m&eacute;todos y datos entre clases subclases y objetos.&rdquo; [6]</p>\r\n\r\n<p>&ldquo;<strong>Objeto</strong>: Concepto, abstracci&oacute;n o cosa con l&iacute;mites bien definidos y con significado para el problema que se est&aacute; manejando. Clase: Descripci&oacute;n abstracta de un grupo de objetos con propiedades similares (atributos), comportamiento com&uacute;n (operaciones), relaciones comunes con otros objetos y sem&aacute;ntica com&uacute;n&rdquo; [7]</p>\r\n\r\n<p>&ldquo;<strong>M&eacute;todo</strong>: Es la implementaci&oacute;n de un algoritmo que representa una operaci&oacute;n o funci&oacute;n que un objeto realiza. El conjunto de los m&eacute;todos de un objeto determina el comportamiento del objeto.&rdquo; [3]</p>\r\n\r\n<p><strong>Encapsulamiento</strong></p>\r\n\r\n<p>Es el proceso de almacenar en una misma secci&oacute;n los elementos de una abstracci&oacute;n que constituyen su estructura y su comportamiento; sirve para separar el interfaz contractual de una abstracci&oacute;n y su implantaci&oacute;n.&rdquo; [8] Existen tres niveles de acceso para el encapsulamiento, los cuales son:</p>\r\n\r\n<ul>\r\n	<li>P&uacute;blico (Public): Todos pueden acceder a los datos o m&eacute;todos de una clase que se definen con este nivel, este es el nivel m&aacute;s bajo, esto es lo que t&uacute; quieres que la parte externa vea.</li>\r\n	<li>Protegido (Protected): Podemos decir que est&aacute;s no son de acceso p&uacute;blico, solamente son accesibles dentro de su clase y por subclases.</li>\r\n	<li>Privado (Private): En este nivel se puede declarar miembros accesibles s&oacute;lo para la propia clase.</li>\r\n</ul>\r\n\r\n<p><strong>Polimorfismo </strong></p>\r\n\r\n<p>Es la capacidad de un objeto de adquirir varias formas. El uso m&aacute;s com&uacute;n de polimorfismo en programaci&oacute;n orientada a objetos se da cuando se utiliza la referencia de una clase padre, para referirse al objeto de la clase hijo. Cualquier objeto java que pueda pasar m&aacute;s de un test &quot;ES-UN&quot; es considerado polim&oacute;rfico.</p>\r\n\r\n<p>En Java, todos los objetos son polim&oacute;rficos ya que cualquier objeto pasar&iacute;a un test &quot;ES-UN&quot; dado que son de su propio tipo, adem&aacute;s del de la clase Object. Es importante saber que la &uacute;nica manera de acceder a un objeto es a trav&eacute;s de una variable de referencia. La variable de referencia s&oacute;lo puede ser de un tipo. Una vez declarado el tipo de la variable de referencia, no se puede cambiar</p>\r\n', '68053af2923e00204c3ca7c6a3150cf7.jpeg', 'GuLIDR3Bojk', 'Paradigmas-Orientados-a-Objetos-y-Artefactos-UML', '1', 1),
(15, 'Diagramas de Casos de Uso', 'Un caso de uso es una secuencia de interacciones entre un sistema y alguien o algo que usa alguno de sus servicios', '<p><strong>Historia</strong></p>\r\n\r\n<p>Los Casos de Uso fueron introducidos por Jacobson en 1992 [Jacobson92]. Sin embargo, la idea de especificar un sistema a partir de su interacci&oacute;n con el entorno es original de Mc Menamin y Palmer, dos precursores del an&aacute;lisis estructurado, que escribieron en 1984 un excelente libro cuya lectura recomendamos [McMenamin84]. En ese libro, se define un concepto muy parecido al del caso de uso: el evento. Para Mc Menamin y Palmer, un evento es algo que ocurre fuera de los l&iacute;mites del sistema, ante lo cual el sistema debe responder. Siguiendo con nuestro ejemplo anterior, nuestro sistema de ventas tendr&aacute; un evento &ldquo;Cliente hace Pedido&rdquo;. En este caso el sistema deber&aacute; responder al estimulo que recibe &ndash;el pedido&ndash; proces&aacute;ndolo.</p>\r\n\r\n<p><strong>Objetivo:</strong></p>\r\n\r\n<p>El prop&oacute;sito de este diagrama es el de describir las relaciones y las dependencias entre un grupo de acciones que se pueden realizar en un sistema y los actores que participan en las mismas. Este diagrama no sirve para representar el dise&ntilde;o del sistema, ya que no indica c&oacute;mo se implementan los elementos internos. Su principal potencia reside en que es un diagrama que plasma de forma muy clara y visual el comportamiento del sistema, por tanto, es un medio muy bueno para que desarrolladores, clientes finales y expertos del dominio lleguen a una comprensi&oacute;n com&uacute;n sin entrar en t&eacute;rminos de una u otra disciplina que no todos los grupos pueden entender.</p>\r\n\r\n<p><strong>Conceptos b&aacute;sicos:</strong></p>\r\n\r\n<p><strong>&iquest;Qu&eacute; es un caso de uso?</strong></p>\r\n\r\n<p>Un caso de uso especifica el comportamiento de un sistema o de una parte del mismo, sin especificar c&oacute;mo se implementa dicho comportamiento, es decir, describe una situaci&oacute;n de uso de un actor. El ejemplo siguiente es un caso de uso que describe que en el sistema en el que est&eacute;, un actor puede hacer un pedido.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" height=\"129\" src=\"http://patronesdediseno.hol.es/user_images/casosdeuso.JPG\" width=\"293\" /></p>\r\n\r\n<p><strong>&iquest;Qu&eacute; es un actor?</strong></p>\r\n\r\n<p>Un actor es un agente externo, alguien o algo que solicita un servicio al sistema o act&uacute;a como catalizador para que ocurra algo. Los actores pueden ser gente real, otros ordenadores o alg&uacute;n evento externo. Hay que tener claro que los actores representan el rol que es jugado por el agente externo y no representa a personas o m&aacute;quinas concretas.</p>\r\n\r\n<p><strong>&iquest;Qu&eacute; es un flujo de eventos?</strong></p>\r\n\r\n<p>Un flujo de eventos describe una secuencia de casos de uso y de interacciones entre ellos y con los actores con la finalidad de poder realizar una operaci&oacute;n del sistema. Existen dos tipos de flujos: flujo b&aacute;sico (o principal) y flujo alternativo (o excepcional). Un flujo b&aacute;sico es aquel en que la operaci&oacute;n se realiza como se espera, por ejemplo, el hecho de que un usuario escriba su usuario y su contrase&ntilde;a y pueda loguearse sin problemas. Un flujo alternativo es aquel que tiene lugar cuando ocurre algo que no est&aacute; dentro del flujo b&aacute;sico, por ejemplo, si el usuario intenta loguearse y escribe mal la contrase&ntilde;a o si el usuario no est&aacute; registrado.</p>\r\n\r\n<p><strong>Relaci&oacute;n entre los componentes:</strong></p>\r\n\r\n<p>Los distintos componentes se pueden relacionar entre ellos de cuatro diferentes maneras:</p>\r\n\r\n<p>1. Comunicaci&oacute;n: Un actor se comunica con un caso de uso para realizar la acci&oacute;n o acciones asociadas a &eacute;l.&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" height=\"133\" src=\"http://patronesdediseno.hol.es/user_images/casosdeuso1.JPG\" width=\"317\" /></p>\r\n\r\n<p>&nbsp;2. Generalizaci&oacute;n: Esta relaci&oacute;n comunica dos casos de uso entre s&iacute; o dos actores. Sirve para especificar una relaci&oacute;n de herencia entre uno y otro. Un caso de uso hijo (el que hereda de otro caso de uso) recibe la especificaci&oacute;n del padre y &eacute;ste puede a&ntilde;adir o modificar el comportamiento heredado. Adem&aacute;s, dado que comparten caracter&iacute;sticas, el hijo puede colocarse en cualquier lugar en donde est&eacute; el padre. Los siguientes ejemplos aclarar&aacute;n mejor esta relaci&oacute;n:&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" height=\"196\" src=\"http://patronesdediseno.hol.es/user_images/casosdeuso2.JPG\" width=\"478\" /></p>\r\n\r\n<p>&nbsp;3. Inclusi&oacute;n: Especifica una situaci&oacute;n en la que un caso de uso ocurre dentro de otro caso de uso. Esto se suele utilizar para evitar redefinir c&oacute;digo que ya est&aacute; creado. En el ejemplo se muestra como el caso de uso hacer pedido incluye las acciones del caso de uso validar usuario.&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" height=\"236\" src=\"http://patronesdediseno.hol.es/user_images/casosdeuso3.JPG\" width=\"380\" /></p>\r\n\r\n<p>&nbsp;4. Extensi&oacute;n: Especifica que un caso de uso base incorpora el comportamiento de otro caso de uso (denominado proveedor) en el lugar indicado indirectamente por el proveedor. Su principal utilidad es modelar la parte de un caso de uso que el usuario puede apreciar como un comportamiento alternativo. En el ejemplo, se define hacer pedido urgente como una extensi&oacute;n de hacer pedido ya que no todos los usuarios necesitan este comportamiento, entonces, muchos de ellos lo ven como un comportamiento opcional.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" height=\"100\" src=\"http://patronesdediseno.hol.es/user_images/casosdeuso4.JPG\" width=\"490\" /></p>\r\n\r\n<p><strong>Ejemplo:</strong></p>\r\n\r\n<p>A continuaci&oacute;n se muestra el diagrama de casos de uso del sistema con las relaciones que se han explicado:</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" height=\"300\" src=\"http://patronesdediseno.hol.es/user_images/casosdeuso5.JPG\" width=\"488\" /></p>\r\n\r\n<p>El siguiente ejemplo es para ilustrar como quedar&iacute;a un diagrama de casos de uso en el que tambi&eacute;n aparecen actores externos:</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" height=\"327\" src=\"http://patronesdediseno.hol.es/user_images/casosdeuso6.JPG\" width=\"514\" /></p>\r\n', '6512bd43d9caa6e02c990b0a82652dca.png', 'x4l1Sp03vQo', 'Diagramas-de-Casos-de-Uso', '1', 1),
(16, 'Diagramas de actividades UML', 'Un diagrama de actividades muestra un proceso de negocio o un proceso de software como un flujo de trabajo a través de una serie de acciones.', '<p>Un&nbsp;<em>diagrama de actividades</em>&nbsp;muestra un proceso de negocio o un proceso de software como un flujo de trabajo a trav&eacute;s de una serie de acciones. Las personas, los componentes de software o los equipos pueden realizar estas acciones.</p>\r\n\r\n<p>Puede usar un diagrama de actividades para describir procesos de varios tipos, como los ejemplos siguientes:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Un proceso de negocio o un flujo de trabajo entre los usuarios y el sistema.</p>\r\n	</li>\r\n	<li>\r\n	<p>Los pasos que se realizan en un caso de uso.</p>\r\n	</li>\r\n	<li>\r\n	<p>Un protocolo de software, es decir, las secuencias de interacciones entre componentes permitidas.</p>\r\n	</li>\r\n	<li>\r\n	<p>Un algoritmo de software.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>En este tema se describen los elementos que puede usar en los diagramas de actividades. Para obtener informaci&oacute;n detallada sobre el dibujo de diagramas de actividades, vea&nbsp;Diagramas de actividades UML: Instrucciones. Para crear un diagrama de actividades UML, en el men&uacute;&nbsp;<strong>Arquitectura</strong>, haga clic en&nbsp;<strong>Nuevo diagrama de UML o de capas</strong>.</p>\r\n\r\n<p>En las tablas de las secciones siguientes se describen los elementos que puede usar en un diagrama de actividades y sus propiedades principales</p>\r\n\r\n<p>Las acciones y otros elementos que aparecen en un diagrama de actividades conforman una actividad. Puede ver la actividad en el Explorador de modelos UML. Se crea cuando se agrega el primer elemento al diagrama.</p>\r\n\r\n<p>Para leer un diagrama, imagine que un token o un subproceso de control pasa por los conectores de una acci&oacute;n a la siguiente.</p>\r\n\r\n<h3><a id=\"Flujos-de-control-simple\"></a><strong>Flujos de control simple</strong></h3>\r\n\r\n<p>Puede mostrar una secuencia de acciones con bifurcaciones y bucles.&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"Flujo de control simple\" id=\"c65bdeb6-3b11-4c4b-87ef-6cf68839d0aa\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC378035.jpeg\" title=\"Flujo de control simple\" xmlns=\"\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table responsive=\"true\" summary=\"table\">\r\n	<tbody>\r\n		<tr>\r\n			<td data-th=\"\"><strong>Forma</strong></td>\r\n			<td data-th=\"\"><strong>Elemento</strong></td>\r\n			<td data-th=\"\"><strong>Descripci&oacute;n y propiedades principales</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">1</td>\r\n			<td data-th=\"\"><strong>Acci&oacute;n</strong></td>\r\n			<td data-th=\"\">Paso de la actividad en el que los usuarios o el software realizan alguna tarea.<br />\r\n			<br />\r\n			La acci&oacute;n se puede iniciar cuando un token llega a todos sus flujos entrantes. Cuando termina, los tokens se env&iacute;an en todos los flujos salientes.<br />\r\n			<br />\r\n			-&nbsp;<strong>Body</strong>: especifica la acci&oacute;n en detalle.<br />\r\n			-&nbsp;<strong>Language</strong>: idioma de la expresi&oacute;n en el cuerpo.<br />\r\n			-&nbsp;<strong>Local Postconditions</strong>: restricciones que deben cumplirse cuando termina la ejecuci&oacute;n. Objetivo alcanzado por la acci&oacute;n.<br />\r\n			-&nbsp;<strong>Local Preconditions</strong>: restricciones que deben cumplirse antes de que empiece la ejecuci&oacute;n.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">2</td>\r\n			<td data-th=\"\"><strong>Flujo de control</strong></td>\r\n			<td data-th=\"\">Conector que muestra el flujo de control entre las acciones. Para interpretar el diagrama, imagine que un token fluye de una acci&oacute;n a la siguiente.<br />\r\n			<br />\r\n			Para crear un flujo de control, use la herramienta&nbsp;<strong>Conector</strong>.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">3</td>\r\n			<td data-th=\"\"><strong>Initial Node</strong></td>\r\n			<td data-th=\"\">Indica la primera acci&oacute;n o las primeras acciones de la actividad. Cuando se inicia la actividad, un token fluye desde el nodo inicial.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">4</td>\r\n			<td data-th=\"\"><strong>Activity Final Node</strong></td>\r\n			<td data-th=\"\">Fin de la actividad. Cuando llega un token, la actividad finaliza.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">5</td>\r\n			<td data-th=\"\"><strong>Decision Node</strong></td>\r\n			<td data-th=\"\">Bifurcaci&oacute;n condicional de un flujo. Tiene una entrada y dos o m&aacute;s salidas. Un token entrante solo emerge en una de las salidas.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">6</td>\r\n			<td data-th=\"\"><strong>Restricci&oacute;n</strong></td>\r\n			<td data-th=\"\">Condici&oacute;n que especifica si un token puede fluir por un conector. Se usa con m&aacute;s frecuencia en los flujos salientes de un nodo de decisi&oacute;n.<br />\r\n			<br />\r\n			Para establecer una restricci&oacute;n, haga clic con el bot&oacute;n derecho en un flujo, haga clic en&nbsp;<strong>Propiedades</strong>&nbsp;y, despu&eacute;s, establezca la propiedad&nbsp;<strong>Restricci&oacute;n</strong>.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">7</td>\r\n			<td data-th=\"\"><strong>Merge Node</strong></td>\r\n			<td data-th=\"\">Necesario para combinar los flujos que se dividieron mediante un nodo de decisi&oacute;n. Tiene dos o m&aacute;s entradas y una salida. Un token en cualquier entrada emerge en la salida.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">8</td>\r\n			<td data-th=\"\"><strong>Comentario</strong></td>\r\n			<td data-th=\"\">Proporciona informaci&oacute;n adicional sobre los elementos a los que est&aacute; vinculado.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">9</td>\r\n			<td data-th=\"\"><strong>Call Behavior Action</strong></td>\r\n			<td data-th=\"\">Acci&oacute;n que se define con m&aacute;s detalle en otro diagrama de actividades.<br />\r\n			<br />\r\n			-&nbsp;<strong>IsSynchronous</strong>: si es true, la acci&oacute;n espera hasta que la actividad finaliza.<br />\r\n			-&nbsp;<strong>Behavior</strong>: actividad invocada.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">(sin mostrar)</td>\r\n			<td data-th=\"\"><strong>Call Operation Action</strong></td>\r\n			<td data-th=\"\">Acci&oacute;n que llama a una operaci&oacute;n en una instancia de una clase.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">&nbsp;</td>\r\n			<td data-th=\"\"><strong>Actividad</strong></td>\r\n			<td data-th=\"\">Flujo de trabajo que se representa mediante un diagrama de actividades. Para ver las propiedades de una actividad, debe seleccionarla en el&nbsp;<strong>Explorador de modelos UML</strong>.<br />\r\n			<br />\r\n			-&nbsp;<strong>Is Read Only</strong>: si es true, la actividad no debe cambiar el estado de los objetos.<br />\r\n			-&nbsp;<strong>Is Single Execution</strong>: si es true, a lo sumo hay una ejecuci&oacute;n de este diagrama a la vez.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">&nbsp;</td>\r\n			<td data-th=\"\"><strong>Diagrama de actividades UML</strong></td>\r\n			<td data-th=\"\">Diagrama que muestra una actividad. Para ver sus propiedades, haga clic en una parte vac&iacute;a del diagrama.&nbsp;<strong>Note:</strong>&nbsp;Los nombres del diagrama de actividades, el archivo que contiene el diagrama y la actividad que se muestra en el diagrama pueden ser diferentes.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><strong>Flujos simult&aacute;neos</strong></h3>\r\n\r\n<p>Puede describir secuencias de acciones que se ejecutan al mismo tiempo. Para m&aacute;s informaci&oacute;n, vea Dibujar flujos simult&aacute;neos.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"Diagrama de actividades mostrando flujo simultáneo\" id=\"ce9da0eb-a553-4eaf-8fa2-97fb295a26d1\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC378036.jpeg\" title=\"Diagrama de actividades mostrando flujo simultáneo\" xmlns=\"\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table responsive=\"true\" summary=\"table\">\r\n	<thead>\r\n		<tr responsive=\"true\">\r\n			<th scope=\"col\">&nbsp;</th>\r\n			<th scope=\"col\">&nbsp;</th>\r\n			<th scope=\"col\">&nbsp;</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td data-th=\"\"><strong>Forma</strong></td>\r\n			<td data-th=\"\"><strong>Elemento</strong></td>\r\n			<td data-th=\"\"><strong>Descripci&oacute;n</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">11</td>\r\n			<td data-th=\"\"><strong>Fork Node</strong></td>\r\n			<td data-th=\"\">Divide un &uacute;nico flujo en flujos simult&aacute;neos. Cada token entrante genera un token en cada conector saliente.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">12</td>\r\n			<td data-th=\"\"><strong>Join Node</strong></td>\r\n			<td data-th=\"\">Combina flujos simult&aacute;neos en un &uacute;nico flujo. Cuando cada flujo entrante tiene un token en espera, se genera un token en la salida.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">13</td>\r\n			<td data-th=\"\"><strong>Send Signal Action</strong></td>\r\n			<td data-th=\"\">Acci&oacute;n que env&iacute;a un mensaje o una se&ntilde;al a otra actividad o a un subproceso simult&aacute;neo de la misma actividad. El tipo y el contenido del mensaje est&aacute;n impl&iacute;citos en el t&iacute;tulo de la acci&oacute;n o se especifican en los comentarios adicionales.<br />\r\n			<br />\r\n			La acci&oacute;n puede enviar datos de la se&ntilde;al, que se pueden pasar a la acci&oacute;n de un flujo de objeto o terminal de entrada (16).</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">14</td>\r\n			<td data-th=\"\"><strong>Accept Event Action</strong></td>\r\n			<td data-th=\"\">Acci&oacute;n que espera un mensaje o una se&ntilde;al antes de continuar con la acci&oacute;n. El tipo de mensaje que la acci&oacute;n puede recibir est&aacute; impl&iacute;cito en el t&iacute;tulo o se especifica en los comentarios adicionales.<br />\r\n			<br />\r\n			Si la acci&oacute;n no tiene ning&uacute;n flujo de control entrante, genera un token cada vez que recibe un mensaje.<br />\r\n			<br />\r\n			La acci&oacute;n puede recibir datos de la se&ntilde;al, que se pueden pasar a un flujo de objeto o terminal de salida (17).<br />\r\n			<br />\r\n			-&nbsp;<strong>IsUnmarshall</strong>: si es true, puede haber varios terminales de salida con tipo y los datos se deserializan en ellos. Si es false, todos los datos aparecen en un terminal.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h3><a id=\"Flujos-de-datos\"></a><a id=\"DataFlow\"></a><strong>Flujos de datos</strong></h3>\r\n\r\n<p>Puede describir el flujo de datos de una acci&oacute;n a otra. Para m&aacute;s informaci&oacute;n sobre los elementos que se usan en esta secci&oacute;n, vea la secci&oacute;n Dibujar flujos de datos del tema Instrucciones para dibujar un diagrama de actividades.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"Diagrama de actividades mostrando flujo de datos\" id=\"08bfc177-5897-4b7c-ad95-9d0bf4b507b8\" src=\"https://i-msdn.sec.s-msft.com/dynimg/IC378037.jpeg\" title=\"Diagrama de actividades mostrando flujo de datos\" xmlns=\"\" /></p>\r\n\r\n<table responsive=\"true\" summary=\"table\">\r\n	<thead>\r\n		<tr responsive=\"true\">\r\n			<th scope=\"col\">&nbsp;</th>\r\n			<th scope=\"col\">&nbsp;</th>\r\n			<th scope=\"col\">&nbsp;</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td data-th=\"\"><strong>Forma</strong></td>\r\n			<td data-th=\"\"><strong>Elemento</strong></td>\r\n			<td data-th=\"\"><strong>Descripci&oacute;n</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">15</td>\r\n			<td data-th=\"\"><strong>Object Node</strong></td>\r\n			<td data-th=\"\">Representa los datos que pasan por un flujo.<br />\r\n			<br />\r\n			-&nbsp;<strong>Ordenaci&oacute;n</strong>: c&oacute;mo se almacenan varios tokens.<br />\r\n			-&nbsp;<strong>Selection</strong>: invoca un proceso, que se puede definir en otro diagrama, que filtra los datos.<br />\r\n			-&nbsp;<strong>Upper Bound</strong>: 0 indica que los datos deben pasar directamente por el flujo; * indica que los datos pueden almacenarse en el flujo.<br />\r\n			-&nbsp;<strong>Type</strong>: tipo de objetos que se almacenan y se transmiten.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">16</td>\r\n			<td data-th=\"\"><strong>Input Pin</strong></td>\r\n			<td data-th=\"\">Representa los datos que puede recibir una acci&oacute;n cuando se ejecuta.<br />\r\n			<br />\r\n			-&nbsp;<strong>Type</strong>: tipo de objetos que se transmiten.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">17</td>\r\n			<td data-th=\"\"><strong>Output Pin</strong></td>\r\n			<td data-th=\"\">Representa los datos que genera una acci&oacute;n cuando se ejecuta.<br />\r\n			<br />\r\n			-&nbsp;<strong>Type</strong>: tipo de objetos que se transmiten.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">18</td>\r\n			<td data-th=\"\"><strong>Activity Parameter Node</strong></td>\r\n			<td data-th=\"\">Nodo de objeto a trav&eacute;s del cual la actividad recibe o genera datos.<br />\r\n			<br />\r\n			Se usa cuando la actividad representada en el diagrama se llama desde otra actividad, o bien cuando el diagrama describe una operaci&oacute;n o funci&oacute;n.<br />\r\n			<br />\r\n			-&nbsp;<strong>Type</strong>: tipo de objetos que se transmiten.</td>\r\n		</tr>\r\n		<tr>\r\n			<td data-th=\"\">(sin mostrar)</td>\r\n			<td data-th=\"\"><strong>Flujo de objetos</strong></td>\r\n			<td data-th=\"\">Conector que muestra el flujo de datos entre las acciones y los nodos de objeto.<br />\r\n			<br />\r\n			Para crear un flujo de objeto, use la herramienta&nbsp;<strong>Conector</strong>&nbsp;para vincular un terminal de entrada o salida, o bien un nodo de objeto a otro elemento.<br />\r\n			<br />\r\n			-&nbsp;<strong>Selection</strong>: invoca un proceso, que se puede definir en otro diagrama, que filtra los datos.<br />\r\n			-&nbsp;<strong>Transformation</strong>: invoca un proceso, que se puede definir en otro diagrama, que transforma los datos.<br />\r\n			-&nbsp;<strong>IsMulticast</strong>: indica que puede haber varios componentes u objetos de destinatario.<br />\r\n			-&nbsp;<strong>IsMultiReceive</strong>: indica que pueden recibirse entradas de varios objetos o componentes.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n', '4d5b995358e7798bc7e9d9db83c612a5.png', 'v1kv-LFZv6w', 'Diagramas-de-actividades-UML', '1', 1),
(17, 'Diagrama de secuencia', 'El diagrama de secuencia es un tipo de diagrama usado para modelar interacción entre objetos en un sistema según UML. En inglés se pueden encontrar como \'sequence diagram\', \'event-trace diagrams\'.', '<p>Un&nbsp;<b>diagrama de secuencia</b>&nbsp;muestra la interacci&oacute;n de un conjunto de objetos en una aplicaci&oacute;n a trav&eacute;s del tiempo y se modela para cada caso de uso. Mientras que el&nbsp;diagrama de casos de uso&nbsp;permite el modelado de una vista&nbsp;<i>business</i>&nbsp;del escenario, el diagrama de secuencia contiene detalles de implementaci&oacute;n del escenario, incluyendo los objetos y clases que se usan para implementar el escenario y mensajes intercambiados entre los objetos.</p>\r\n\r\n<p>T&iacute;picamente se examina la descripci&oacute;n de un&nbsp;caso de uso&nbsp;para determinar qu&eacute; objetos son necesarios para la implementaci&oacute;n del escenario. Si se dispone de la descripci&oacute;n de cada&nbsp;caso de uso&nbsp;como una secuencia de varios pasos, entonces se puede &quot;caminar sobre&quot; esos pasos para descubrir qu&eacute; objetos son necesarios para que se puedan seguir los pasos. Un diagrama de secuencia muestra los objetos que intervienen en el escenario con l&iacute;neas discontinuas verticales, y los mensajes pasados entre los objetos como flechas horizontales.</p>\r\n\r\n<p><strong>Objetos</strong><br />\r\nLos diagramas de secuencia constan de objetos que se representan de modo usual: rect&aacute;ngulo con nombre, mensajes entre los objetos representados por l&iacute;neas continuas con una punta de flecha y el tiempo representado como una progresi&oacute;n vertical. Los objetos se colocan cerca de la parte superior del diagrama de izquierda a derecha y se acomodan de manera que simplifiquen el diagrama.<br />\r\nLa extensi&oacute;n que esta debajo (en forma descendente) de cada objeto ser&aacute; una l&iacute;nea discontinua conocida como la l&iacute;nea de vida de un objeto, junto con la l&iacute;nea de vida de un (objeto rect&aacute;ngulo) se le conoce como activaci&oacute;n, el cual una operaci&oacute;n que realiza el objeto la interpreta como la duraci&oacute;n de la activaci&oacute;n.<br />\r\n&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5340195456525125330\" src=\"http://1.bp.blogspot.com/_YdZL5wa3sok/ShwveWFVxtI/AAAAAAAAAAM/fsGqHcm0FvE/s320/NOM.jpeg\" /></p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n\r\n<p style=\"text-align: justify;\"><strong>Linea de vida</strong></p>\r\n\r\n<p style=\"text-align: justify;\">Una l&iacute;nea de vida representa un participante individual en un diagrama de secuencia. Una l&iacute;nea de vida usualmente tiene un rect&aacute;ngulo que contiene el nombre del objeto. Si el nombre es self entonces eso indica que la l&iacute;nea de vida representa el clasificador que posee el diagrama de secuencia.<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5340309980288813970\" src=\"http://3.bp.blogspot.com/_YdZL5wa3sok/ShyXogWWi5I/AAAAAAAAAAs/X4UAyDSPH1k/s320/Diagrama1.jpeg\" /></p>\r\n\r\n<p><strong>Mensaje</strong><br />\r\nUn mensaje que va de un objeto a otro pasa de la l&iacute;nea de vida de un objeto al de otro. Un objeto puede enviarse un objeto a si mismo es decir de su l&iacute;nea de vida as&iacute; propia l&iacute;nea de vida.<br />\r\nUn mensaje puede ser simple, s&iacute;ncrono y as&iacute;ncrono</p>\r\n\r\n<ul>\r\n	<li>Mensaje simple: es la transferencia del control de un objeto a otro.</li>\r\n	<li>Mensaje s&iacute;ncrono: es cuando el objeto espera la respuesta a ese mensaje antes de continuar con su trabajo.</li>\r\n	<li>Mensaje as&iacute;ncrono: es cuando el objeto no espera la respuesta a ese mensaje antes de continuar.</li>\r\n</ul>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5340200256866367474\" src=\"http://2.bp.blogspot.com/_YdZL5wa3sok/Shwz1wv4N_I/AAAAAAAAAAU/5b-7VIAS48M/s320/123.jpeg\" /></p>\r\n\r\n<p><strong>Tiempo</strong></p>\r\n\r\n<p align=\"justify\">El diagrama representa el tiempo en direcci&oacute;n vertical. El tiempo se inicia en la parte superior y avanza hacia la parte inferior. Un mensaje que este mas cerca de la parte superior ocurrir&aacute; antes que uno que est&eacute; cerca de la parte inferior.<br />\r\nCon ellos el diagrama de secuencia tiene 2 dimensiones: la dimensi&oacute;n horizontal (es la disposici&oacute;n de los objetos) y la dimensi&oacute;n vertical (muestra el paso del tiempo).</p>\r\n\r\n<p align=\"justify\">La siguiente figura muestra el conjunto basico de simbolos del diagrama desecuencia, junto con los simbolos de su funcionamiento.</p>\r\n\r\n<p align=\"right\">&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5340202132842332402\" src=\"http://3.bp.blogspot.com/_YdZL5wa3sok/Shw1i9TZwPI/AAAAAAAAAAc/n45u18f-Wj0/s320/456.jpeg\" /></p>\r\n\r\n<p><br />\r\n<strong>Recursividad</strong></p>\r\n\r\n<p align=\"justify\">En ocasiones un objeto posee una operaci&oacute;n que se invoca a si misma. A esto se le conoce como recursividad y es una caracter&iacute;stica fundamental de varios lenguajes de programaci&oacute;n.</p>\r\n\r\n<p align=\"justify\">La siguiiente figura muestra este tipo de reprecentacion.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5340205675418328642\" src=\"http://4.bp.blogspot.com/_YdZL5wa3sok/Shw4xKbVnkI/AAAAAAAAAAk/9vCiUu5AGec/s320/51.jpeg\" /></p>\r\n\r\n<p align=\"center\">&nbsp;</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Diagrama</p>\r\n	</li>\r\n	<li>\r\n	<p>Secuencia</p>\r\n	</li>\r\n	<li>\r\n	<p>Objeto</p>\r\n	</li>\r\n	<li>\r\n	<p>Mensaje</p>\r\n	</li>\r\n	<li>\r\n	<p>Tiempo</p>\r\n	</li>\r\n	<li>\r\n	<p>Recurcividad</p>\r\n	</li>\r\n	<li>\r\n	<p>Linea</p>\r\n	</li>\r\n	<li>\r\n	<p>Vida</p>\r\n	</li>\r\n	<li>\r\n	<p>self</p>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Objetvo</strong></p>\r\n\r\n<p align=\"left\">Descubrir las interfases requeridas para cada objeto y validar que cada interfase se usa realmente.<br />\r\nEl diagrama de Secuencias modela interacciones entre objetos. Ya que estas interacciones pueden ser muy complejas, se modelan un peque&ntilde;o juego de interacciones como un solo escenario.</p>\r\n\r\n<p><strong>Ejemplo</strong></p>\r\n\r\n<p>Juego del ajedrez</p>\r\n\r\n<p align=\"center\"><a href=\"http://1.bp.blogspot.com/_YdZL5wa3sok/ShyqUR4FC-I/AAAAAAAAAA0/G291uN7Au7g/s1600-h/EJEMPLO.jpg\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5340330523527285730\" src=\"http://1.bp.blogspot.com/_YdZL5wa3sok/ShyqUR4FC-I/AAAAAAAAAA0/G291uN7Au7g/s320/EJEMPLO.jpg\" /></a></p>\r\n', '22ac3c5a5bf0b520d281c122d1490650.png', 'xiQfSFxuuBw', 'Diagrama-de-secuencia', '1', 1),
(18, 'Herramientas Case', 'Define tipos de diagramas. Análisis de herramientas Identifica los procedimientos empleados en diversas herramientas de modelado de datos. ', '<p><strong>Introduccion</strong></p>\r\n\r\n<p style=\"text-align: justify;\">En este mundo globalizado, la tecnolog&iacute;a avanza d&iacute;a a d&iacute;a, surgen nuevas y novedosas forma de realizar las diferentes actividades con mayor calidad y reduciendo los riesgos al m&iacute;nimo posible.&nbsp;<br />\r\nLas herramientas CASE nacen o surgen para auxiliar a los desarrolladores de software en los diferentes proyectos que estos emprenden, seto permite el respaldo de estas herramientas en todo o en parte del ciclo de vida del desarrollo de un proyecto de software.&nbsp;<br />\r\nEn este trabajo investigativo se mencionar&aacute;, que son las herramientas case, la forma de la interfaz gr&aacute;fica, ventajas y desventajas, as&iacute; como tambi&eacute;n sus principales funcionalidades.&nbsp;</p>\r\n\r\n<p style=\"text-align: justify;\">El uso de herramientas CASE mejora la representaci&oacute;n de datos que mejora el proceso de desarrollo de software. El trabajo presente abordamos definiciones de diagramas de casos de uso, base de datos relacional y las herramientas de case empleadas y los beneficios que est&aacute;n dispone.</p>\r\n\r\n<p style=\"text-align: justify;\"><strong>Herramienta Case</strong></p>\r\n\r\n<p style=\"text-align: justify;\">CASE es un acr&oacute;nimo para Computer-Aided Software Engineering que significa Ingenier&iacute;a de Software Asistida por Computadora.&nbsp;<br />\r\nSeg&uacute;n B.Terry &amp; D.Logee, CASE es definido como: &ldquo;Herramientas individuales para ayudar al desarrollador de software o administrador de proyecto durante una o m&aacute;s fases del desarrollo de software (o mantenimiento).&rdquo; [1]&nbsp;<br />\r\nLa evoluci&oacute;n de las herramientas CASE est&aacute; ligada a la evoluci&oacute;n de la Ingenier&iacute;a de Software como disciplina&nbsp;<br />\r\n&ldquo;Actualmente existe un gran n&uacute;mero de metodolog&iacute;as tanto comerciales como en el &aacute;mbito acad&eacute;mico y de investigaci&oacute;n. Ellas pueden ser agrupadas en dos grandes corrientes: Metodolog&iacute;as Estructuradas y Metodolog&iacute;as Orientado a Objeto.&rdquo; [1]&nbsp;<br />\r\nCon el empleo de herramientas CASE se visualiza las estructuras que sustentan las funcionalidades del programa, permitiendo verificar el trabajo de forma autom&aacute;tica.</p>\r\n\r\n<p style=\"text-align: justify;\">Herramientas para el an&aacute;lisis&nbsp;</p>\r\n\r\n<p style=\"text-align: justify;\">Estructurado</p>\r\n\r\n<ul>\r\n	<li style=\"text-align: justify;\">CASE Studio</li>\r\n	<li style=\"text-align: justify;\">Toad Data Model</li>\r\n	<li style=\"text-align: justify;\">Visio</li>\r\n	<li style=\"text-align: justify;\">Enterprise Architect&nbsp;</li>\r\n</ul>\r\n\r\n<p style=\"text-align: justify;\">Orientado a Objetos &nbsp;</p>\r\n\r\n<ul>\r\n	<li style=\"text-align: justify;\">VP</li>\r\n	<li style=\"text-align: justify;\">Rational Rose</li>\r\n	<li style=\"text-align: justify;\">ArgoUML</li>\r\n	<li style=\"text-align: justify;\">Poseidon&nbsp;</li>\r\n</ul>\r\n', '6ea9ab1baa0efb9e19094440c317e21b.jpeg', 'k5UzKfCBiIk', 'Herramientas-Case', '1', 1),
(20, ' Herramienta Toad Data Model ', '“Toad Data Modeler permite a los desarrolladores, administradores de bases, y diseñadores a crear, mantener y diseños de bases de datos de calidad de documentos y estructuras a través de varias plataformas de bases de datos. Con la herramienta, puede hace', '<p>Mediante esta herramienta se puede representar la informaci&oacute;n y an&aacute;lisis de requisitos de forma gr&aacute;fica mediante el empleo de diagramas. Esta aplicaci&oacute;n nos permite crear complejos diagramas o modelados para varias bases de datos en un tiempo eficaz</p>\r\n\r\n<p>&ldquo;Toad Data Modeler de Quest Software ayuda a las organizaciones a crear, mantener y documentar sus sistemas de bases de datos con una interfaz gr&aacute;fica f&aacute;cil de usar en estructuras de bases de datos nuevas o existentes. Toad Data Modeler permite a los usuarios realizar ingenier&iacute;a inversa de estructuras de bases de datos, actualizar modelos, dise&ntilde;ar y generar SQL, comparar modelos y generar scripts alternativos, crear informes HTML o RTF, adem&aacute;s de versionar dise&ntilde;os de bases de datos y crear listas de tareas&rdquo; [1]</p>\r\n\r\n<p>Esta herramienta es compatible para varias versiones de DDL Script como se visualiza en la siguiente imagen:&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"Resultado de imagen para toad data modeler ddl script\" height=\"345\" src=\"http://documents.software.dell.com/toad-data-modeler/5.4/user-guide/projects-and-models/models/physical-data-model/connections-and-reverse-engineering/snippets/image.ashx?id=a66e3392-e8d8-4d24-beeb-f44722616f0e\" width=\"394\" /></p>\r\n\r\n<p>Toad Data Model es una aplicaci&oacute;n que nos permitir&aacute; dise&ntilde;ar un buen diagrama Entidad-Relaci&oacute;n, para crear una Base de Datos potente y eficiente para nuestros proyectos. Mediante esta herramienta se tiene la opci&oacute;n de Generar informes muy detallados.</p>\r\n', '3c59dc048e8850243be8079a5c74d079.png', 'Xj52wxV0314', 'Herramienta-Toad-Data-Model', '1', 1),
(21, 'Microsoft Visio ', 'Desarrollado por la compañía Microsoft inicialmente como una aplicación de dibujo vectorial dirigido para ingenieros y arquitectos y que en los posterior se convirtió en una herramienta que permite realizar gráficos y diagramas de trabajo de manera asisti', '<p>Visio fu&eacute; una herramienta que inicialmete estava dise&ntilde;ada para los los dibujos vectoriales, sin embargo fue adaptada a la ingenier&iacute;a de procesos y software.</p>\r\n\r\n<p>Microsoft [1] presenta los tupos de diagramas que pueden ser soportados por esta herramienta.</p>\r\n\r\n<p><strong>Tipos de diagramas de Visio</strong></p>\r\n\r\n<p><strong>Visio es compatible con varios est&aacute;ndares de la industria como por ejemplo UML 2.5 y IEEE.&nbsp;</strong></p>\r\n\r\n<ul>\r\n	<li>Diagramas de flujo o Flujogramas. Facilitan que las grandes cantidades de informaci&oacute;n se conviertan en esquemas de decisi&oacute;n inequ&iacute;vocos. Ejemplo: Los Diagramas BPMN (Business Process Model).&nbsp;</li>\r\n	<li>Organigramas, ideales para definir la estructura dentro de una organizaci&oacute;n u otros tipos de organigramas.&nbsp;</li>\r\n	<li>Diagramas de lluvias de ideas. Ideales para buscar ideas sobre una la soluci&oacute;n de un problema en un equipo de trabajo.&nbsp;</li>\r\n	<li>Diagramas de bloques, este diagrama es uno delos m&aacute;s utilizados para describir el funcionamiento interno de un sistema.&nbsp;</li>\r\n	<li>Diagramas de flujo de datos. Para explicar c&oacute;mo son procesados los datos por un sistema. Los diagramas de flujo de trabajo, suponen un gran ahorro de costes al evitar errores y p&eacute;rdidas de tiempo.&nbsp;</li>\r\n	<li>Diagramas de Gantt, para la comunicaci&oacute;n de gesti&oacute;n de proyectos y organizaci&oacute;n de tiempo y recursos. &nbsp;</li>\r\n	<li>Escala de tiempo y todo tipo de diagramas profesionales.&nbsp;</li>\r\n</ul>\r\n\r\n<p style=\"text-align:center\"><img alt=\"Resultado de imagen para visio\" src=\"https://upload.wikimedia.org/wikipedia/en/3/39/Microsoft_Visio_screenshot.png\" /></p>\r\n\r\n<p><strong>Formas de trabajo&nbsp;&nbsp;</strong></p>\r\n\r\n<p>La metodolog&iacute;a de trabajo de Visio es muy sencilla&nbsp;</p>\r\n\r\n<ol>\r\n	<li>Primero se arrastran y sueltan los objetos en la hoja de trabajo aqu&iacute; se dispone de alineaci&oacute;n y espaciado automatizado.</li>\r\n	<li>Los objetos que est&aacute;n colocados en la hoja de trabajo se pueden conectar a trav&eacute;s de flechas y l&iacute;neas.</li>\r\n	<li>Finalmente, estos objetos pueden ser girardos y adicionar texto como por&nbsp;ejemplo en los diagramas de flujo o en los organigramas. &nbsp;</li>\r\n	<li>En la parte derecha de la ventana de visio podemos ver las opciones de las cuales vamos a construir los diagramas, los citados en la parte de arriba solo son una peque&ntilde;a parte de lo que esta herramienta puede hacer.&nbsp;</li>\r\n</ol>\r\n\r\n<h2><strong><span style=\"font-size:14px;\">Anima diagramas con la vinculaci&oacute;n de datos</span></strong></h2>\r\n\r\n<p>&ldquo;Conecta los datos a la visualizaci&oacute;n de una estructura organizativa, a una red de TI, a una planta industrial, o a procesos empresariales complejos para captar el rendimiento de un vistazo. Las formas de Visio pueden vincularse a m&uacute;ltiples or&iacute;genes de datos, como Microsoft Excel, Microsoft Excel Services, Active Directory, Microsoft SQL Server, Microsoft SQL Azure y Microsoft SharePoint Lists y los Servicios de conectividad empresarial.</p>\r\n\r\n<p>Usa los gr&aacute;ficos de datos como los iconos, los colores y el texto para simplificar y mejorar la visualizaci&oacute;n de la informaci&oacute;n compleja. Aprovecha la nueva conectividad en un paso con las tablas de Excel e intercambia los gr&aacute;ficos de datos seg&uacute;n tus preferencias con tan solo un clic&rdquo; [2].</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"Captura de pantalla de un diagrama de Visio con datos vinculados con una hoja de cálculo de datos y datos de formas.\" src=\"https://c.s-microsoft.com/es-mx/CMSImages/Image_DataLinking_713x400.png?version=969e9a66-7635-469a-d40d-2a70a0fd74f1\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><span style=\"font-size:14px;\"><strong>Comunica con una versi&oacute;n real de forma visual</strong></span></h2>\r\n\r\n<p>Comunica y comparte tu diagrama de flujo, tu escala de tiempo, tus mapas de proceso, tu estructura organizativa, arquitectura de TI, o tu plano de planta en la empresa a trav&eacute;s de un explorador con los Servicios de Visio en Office 365 o SharePoint. A medida que tus datos subyacentes se actualizan, tus diagramas se actualizan en el explorador.</p>\r\n\r\n<p>Trabajad juntos al mismo tiempo en el mismo diagrama y consultad f&aacute;cilmente los comentarios de los revisores (tanto en Visio como en Servicios de Visio).</p>\r\n\r\n<p>Diagramas seguros con la Administraci&oacute;n de Derechos de Informaci&oacute;n (IRM), protecci&oacute;n ante la p&eacute;rdida de datos (DLP) y autenticaci&oacute;n multifactor.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"Un portátil y una tableta, mostrando cada uno un diagrama diferente de Visio.\" src=\"https://c.s-microsoft.com/es-mx/CMSImages/Image_Communicate_713x400.jpg?version=79a6134e-c774-ea23-6e44-0ebecd5ae303\" /></p>\r\n\r\n<p><strong>Opinion Personal&nbsp;</strong></p>\r\n\r\n<p>Si bien es cierto MS Visio tiene sus puntos fuertes en cuanto el dise&ntilde;o de organigramas y ciertos modelos de negocios, no es una de las herramientas mas &oacute;ptimas para trabajar con diagramas avanzados, puede resultar muy amigable esta interfaz pero la rapidez en la que se puede dise&ntilde;ar algo avanzado esta bastante limitado.</p>\r\n', 'a86c450b76fb8c371afead6410d55534.png', '5dDd63sp1Q4', 'Microsoft-Visio', '1', 1);
INSERT INTO `post` (`id_pos`, `tit_pos`, `des_pos`, `cue_pos`, `img_pos`, `vid_pos`, `url_pos`, `sta_pos`, `id_use`) VALUES
(22, 'Enterprise Architect', 'Enterprise Architect es una herramienta visual de diseño y modelado de software, para modelo de negocios y otros procesos de modelado generalizados.', '<p>Este IDE est&aacute; basado en UML 2.5 cuya especificaci&oacute;n podemos encontrarla en www.omg.org, UML en general es usado para modelo en particular del dominio de sistemas</p>\r\n\r\n<p>&ldquo;Esta herramienta es progresiva de manera que cubre todos los procesos del ciclo de vida del desarrollo, dando una trazabilidad completa desde la fase de dise&ntilde;o inicial hasta la implantaci&oacute;n, mantenimiento, pruebas y de control&rdquo;. [1]</p>\r\n\r\n<h2><strong><span style=\"font-size:14px;\">Diferencias de EA entre otras herramientas</span></strong></h2>\r\n\r\n<p>La empresa desarrolladora y distribuidora de EA expone las caracter&iacute;sticas que diferencias a este software de otras herramientas de modelado de datos, a continuaci&oacute;n, mostramos una lista de todas estas caracter&iacute;sticas. [1]</p>\r\n\r\n<ul>\r\n	<li>Modelado basado en UML 2.5</li>\r\n	<li>Administraci&oacute;n de requisitos</li>\r\n	<li>Gesti&oacute;n de proyectos incluyendo aqu&iacute; los recursos, tareas, calendarizaci&oacute;n y m&eacute;tricas.</li>\r\n	<li>Gesti&oacute;n de pruebas: podemos notar aqu&iacute; la gesti&oacute;n del punto de prueba, ejecuci&oacute;n de pruebas basada en el modelo y soporte para NUNIT y JUNIT.</li>\r\n	<li>Documentaci&oacute;n Flexible: basada en HTML y de texto enriquecido RTF redactores de informes.</li>\r\n	<li>C&oacute;digo de Soporte para ingenier&iacute;a con muchos idiomas disponibles.</li>\r\n	<li>Analizador Visual Ejecuci&oacute;n integrada al perfil, depurar y ejecutar aplicaciones de documentos; instanciar los objetos del modelo de tiempo de ejecuci&oacute;n.</li>\r\n	<li>Entorno de modelado extensible: el usuario puede escoger perfiles y tecnolog&iacute;as definidas.</li>\r\n	<li>F&aacute;cil uso: trabajar con UML nunca fue tan f&aacute;cil como con EA.</li>\r\n	<li>Rapidez: Su tiempo de respuesta en muy considerable.</li>\r\n	<li>Escalabilidad: Se puede manejar gran cantidad de modelos muchos usuarios al mismo tiempo con facilidad.</li>\r\n	<li>Precio: A diferencia de otras herramientas el precio es considerable, pero esto es compensado con la cantidad de funciones que EA posee.</li>\r\n</ul>\r\n\r\n<p>Enterprise Architect es una herramienta que ha tomado mucha popularidad los &uacute;ltimos a&ntilde;os, esto se debe a la capacidad que tiene este sistema para ofrecer a los desarrolladores facilidades al momento de hacer sistemas, usando el UML que es un lenguaje universal para modelar procesos todo esto combinado han hecho que EA sea preferido por los desarrolladores.</p>\r\n\r\n<p>Seg&uacute;n datos de SPARX SYSTEMS hasta la actualidad se han vendido m&aacute;s de 380000 licencias con esto se demuestra que ha llegado a ser notablemente popular a trav&eacute;s de una amplia gama de industrias en todo el mundo.</p>\r\n\r\n<h2><strong><span style=\"font-size:14px;\">Caracter&iacute;sticas de Enterprise Architect</span></strong></h2>\r\n\r\n<p>A continuaci&oacute;n, se muestra una lista completa de las caracter&iacute;sticas de EA expuesta por la empresa creadora. [1]</p>\r\n\r\n<p>EA permite:</p>\r\n\r\n<ul>\r\n	<li>Modelos complejos de informaci&oacute;n, Hardware y Software compartibles con la notaci&oacute;n UML.</li>\r\n	<li>Modelo y gesti&oacute;n de Requerimientos.</li>\r\n	<li>Documentaci&oacute;n detallada con HTML, PDF, RTF.</li>\r\n	<li>Marcos de arquitectura empresarial.</li>\r\n	<li>Generar y revertir c&oacute;digo en m&aacute;s de 10 lenguajes de programaci&oacute;n.</li>\r\n	<li>Modelo de base de datos, generaci&oacute;n de comando DDL y reversi&oacute;n de esquemas de base de datos a trav&eacute;s de DDBC.</li>\r\n	<li>Centralizar la documentaci&oacute;n de toda la empresa de los procesos y sistemas de informaci&oacute;n</li>\r\n	<li>Dependencia entre modelos.</li>\r\n	<li>Jerarqu&iacute;a de clases, componentes y detalles de implementaci&oacute;n.</li>\r\n	<li>Registro de tareas y glosario del sistema.</li>\r\n	<li>Centralizar la documentaci&oacute;n de toda la empresa de los procesos y sistemas de informaci&oacute;n</li>\r\n	<li>Compartir modelos que utilizan el &uacute;ltimo formato XMI 2.1. (Versiones anteriores tambi&eacute;n son compatibles)</li>\r\n	<li>Exportar modelos de ostras herramientas en formato XMI.</li>\r\n	<li>Administrar el control de versiones a trav&eacute;s de XMI utilizando configuraciones de SCC, CVS y Subversi&oacute;n.</li>\r\n	<li>Utilice perfiles UML para crear extensiones personalizadas para el modelado de dominio espec&iacute;fico.</li>\r\n	<li>Cargar y guardar diagramas completos como patrones</li>\r\n	<li>Analizar y trazar relaciones entre los elementos usando la matriz tabular de relaci&oacute;n</li>\r\n	<li>Conectar a los repositorios de bases de datos compartidas utilizando MS SQL Server, MySQL, Oracle y m&aacute;s</li>\r\n	<li>Migrar cambios a trav&eacute;s de un entorno distribuido usando paquetes XMI.</li>\r\n	<li>Crear y compartir puntos de vista din&aacute;micos de los elementos del modelo y conjuntos de diagramas utilizando el modelo Vistas.</li>\r\n	<li>Crear mapas mentales, modelos de procesos de negocio y Diagramas de Flujo de Datos usando UML</li>\r\n	<li>Generar la l&oacute;gica de negocio ejecutable a partir de tareas de normas y reglas de negocio para rastrear lenguaje natural.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong><span style=\"font-size:14px;\">Bases de Enterprise Architect</span></strong></h2>\r\n\r\n<p>Como se menciona antes EA est&aacute; construido basado en UML 2.5 pero no todo queda aqu&iacute;, tambi&eacute;n podemos adicionar el uso de perfiles UML para agrandar el dominio del modelado, a continuaci&oacute;n, se detalla el soporte para los diagramas UML 2.5 y m&aacute;s.</p>\r\n\r\n<ul>\r\n	<li>Diagramas Estructurales.\r\n	<ul style=\"list-style-type:circle;\">\r\n		<li>Objeto</li>\r\n		<li>Compuesto</li>\r\n		<li>Clase</li>\r\n		<li>Paquete</li>\r\n		<li>Componente</li>\r\n		<li>Despliegue.</li>\r\n	</ul>\r\n	</li>\r\n	<li>Diagramas de Comportamiento.\r\n	<ul style=\"list-style-type:circle;\">\r\n		<li>Casos de Uso</li>\r\n		<li>Secuencia</li>\r\n		<li>Comunicaci&oacute;n</li>\r\n		<li>Actividad</li>\r\n		<li>Estado</li>\r\n		<li>Tiempo</li>\r\n		<li>Descripci&oacute;n de la interacci&oacute;n.</li>\r\n	</ul>\r\n	</li>\r\n	<li>Extendidos.\r\n	<ul style=\"list-style-type:circle;\">\r\n		<li>An&aacute;lisis (Actividad simple)</li>\r\n		<li>Personalizados. (Para interfaz de Usuario, requisitos, cambios)</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2><strong><span style=\"font-size:14px;\">Introducci&oacute;n al modelado de base de datos</span></strong></h2>\r\n\r\n<p>&ldquo;Como sabemos el modelado de base de datos no son expl&iacute;citamente cubiertos por las especificaciones del UML, pero pueden ser implementados en EA usando la p&aacute;gina de Modelado de datos ubicado en la caja de herramientas del UML en EA por otra parte el perfil de modelado UML provee de extensiones UML est&aacute;ndar para el mapeado de los conceptos de base de datos en lo que tiene que ver con tablas y relaciones en los conceptos de UML de clases y asociaciones, estas extensiones tambi&eacute;n permiten modelar las claves de las bases de datos, disparadores, limitadores y otras caracter&iacute;sticas de base de datos&rdquo;.&nbsp;[1]</p>\r\n\r\n<h3><span style=\"font-size:14px;\"><u>Tablas y Columnas.</u></span></h3>\r\n\r\n<p>Las tablas son la representaci&oacute;n b&aacute;sica de un modelo de base de datos relacional y es aqu&iacute; donde se incluyen los diferentes registros o filas con la misma estructura.</p>\r\n\r\n<p style=\"margin-left:18.0pt;\">El perfil de modelado de datos UML representa:</p>\r\n\r\n<ul style=\"list-style-type:circle;\">\r\n	<li>Tablas como clases</li>\r\n	<li>Columnas como atributos.</li>\r\n</ul>\r\n\r\n<p style=\"margin-left:35.4pt;\">Aqu&iacute; cabe destacar que Enterprise Architect puede generar c&oacute;digo DDL simples para crear las tablas en su modelo.</p>\r\n\r\n<p><u>&nbsp;Claves de base de datos.</u></p>\r\n\r\n<p style=\"margin-left:18.0pt;\">Seg&uacute;n los conceptos b&aacute;sicos de base de datos se usan dos tipos de claves para acceder a los datos de las tablas, estas son las claves primarias y las claves for&aacute;neas.</p>\r\n\r\n<p style=\"margin-left:18.0pt;\">Claves primarias: consiste de una o m&aacute;s columnas, una clave primaria simple puede estar conformado por una columna simple muestras que una clave primaria compleja est&aacute;n conformadas de muchas columnas.</p>\r\n\r\n<p style=\"margin-left:18.0pt;\">Clave for&aacute;nea: es una colecci&oacute;n de columnas o atributos que juntos tienen un significado operacional, las claves for&aacute;neas se representan en EA como operaciones con el estereotipo FK los par&aacute;metros de las operaciones se transforman e columnas inmiscuidas con la clave.</p>\r\n\r\n<p><u>Bases de datos soportadas.</u></p>\r\n\r\n<p style=\"margin-left:18.0pt;\">EA soporta la importaci&oacute;n de esquema de base de datos desde la lista siguiente.</p>\r\n\r\n<ul>\r\n	<li>MYSQL</li>\r\n	<li>POSTGRESQL</li>\r\n	<li>ORACLE</li>\r\n	<li>MS SQL SERVER</li>\r\n	<li>MS ACCESS</li>\r\n	<li>INFORMIX</li>\r\n	<li>INGRESS</li>\r\n	<li>INTERBASE</li>\r\n	<li>FIREBIRD</li>\r\n	<li>SYBASE</li>\r\n</ul>\r\n\r\n<p style=\"margin-left:18.0pt;\">Hay que tener en cuenta que las tablas de base de datos de Firebird 1,5 se pueden modelar y generar como tablas de la base de datos de InterBase.</p>\r\n', '5c04925674920eb58467fb52ce4ef728.jpeg', '', 'Enterprise-Architect', '1', 1),
(25, ' Ingeniería de Requerimientos', 'es la disciplina para desarrollar una especificación completa, consistente y no ambigua, la cual servirá como base para acuerdos comunes entre todas las partes involucradas y en dónde se describen las funciones que realizará el sistema.', '<p><strong>Introducci&oacute;n</strong></p>\r\n\r\n<p>En la actualidad, son muchos los procesos de desarrollo de software que existen. Con el pasar de los a&ntilde;os, la ingenier&iacute;a de Software ha introducido y popularizado una serie de est&aacute;ndares para medir y certificar la calidad tanto del sistema a desarrollar, como del proceso de desarrollo en s&iacute;. Hoy en d&iacute;a la econom&iacute;a depende m&aacute;s de los sistemas automatizados que en &eacute;pocas pasadas; esto ha llevado a los equipos de desarrollo a enfrentarse con una nueva d&eacute;cada de procesos y est&aacute;ndares de calidad.</p>\r\n\r\n<p>El an&aacute;lisis de requerimientos es un proceso muy importante al momento de empezar un proyecto de desarrollo del software, el analista de sistema debe de tratar de entender al cliente que es lo que el necesita, debe comprender a cabalidad sus necesidades para evitar posibles malos entendidos, inconvenientes y problemas a la hora de entrega del producto de software.</p>\r\n\r\n<p>Los requerimientos que hace el cliente muchas de las veces son muy generales o abiertos, los cuales abarcan muchos procesos, pero el analista debe tratar de desmenuzar dichos requerimientos y entender muy bien lo que el cliente realmente necesita.</p>\r\n\r\n<p>Dentro de la recolecci&oacute;n de requerimientos podemos encontrar requerimientos de varios tipos como los funcionales y los no funcionales, el analista como su nombre mismo lo dice se encarga de analizar, clasificar y organizar dichos requerimientos y determinar cu&aacute;les de estos son los que van a intervenir directamente con el sistema, es decir los funcionales; y cu&aacute;les no, los no funcionales, estos &uacute;ltimos se encargan de detallar propiedades del sistema, pero tambi&eacute;n muy importantes en el desarrollo del software.</p>\r\n\r\n<p>Cabe recalcar que este proceso se lo considera como punto de partida para luego elaborar el cronograma del proyecto, cualquier duda o mal entendido se puede convertir en un serio problema a futuro ya que no estar&aacute; contemplado en la planificaci&oacute;n, es por esto que se debe realizar un plan de contingencia por si acaso ocurra alg&uacute;n imprevisto.</p>\r\n\r\n<p><strong>Requerimientos</strong></p>\r\n\r\n<p>&ldquo;Los requerimientos para un sistema son la descripci&oacute;n de los servicios proporcionados por el sistema y sus restricciones operativas. Estos requerimientos reflejan las necesidades de los clientes de un sistema que ayude a resolver alg&uacute;n problema como el control de un dispositivo, hacer un pedido o encontrar informaci&oacute;n&rdquo; [1]</p>\r\n\r\n<p><strong>Ingenier&iacute;a de requerimientos</strong></p>\r\n\r\n<p>&ldquo;El proceso de descubrir, analizar, documentar y verificar estos servicios y restricciones se denomina ingenier&iacute;a de requerimientos (RE)&rdquo; [1]&ldquo;Incluye siete tareas diferentes: concepci&oacute;n, indagaci&oacute;n, elaboraci&oacute;n, negociaci&oacute;n, especificaci&oacute;n, validaci&oacute;n y administraci&oacute;n. Es importante notar que algunas de estas tareas ocurren en paralelo y que todas se adaptan a las necesidades del proyecto&rdquo; [2]</p>\r\n\r\n<p style=\"margin-left:36.0pt;\"><strong>Requerimientos del usuario</strong></p>\r\n\r\n<p style=\"margin-left:35.4pt;\">&ldquo;Son declaraciones, en lenguaje natural y en diagramas, de los servicios que se espera que el sistema proporcione y de las restricciones bajo las cuales debe funcionar&rdquo; [1]</p>\r\n\r\n<p style=\"margin-left:36.0pt;\"><strong>Requerimientos del sistema</strong></p>\r\n\r\n<p style=\"margin-left:35.4pt;\">&ldquo;Establecen con detalle las funciones, servicios y restricciones operativas del sistema. El documento de requerimientos del sistema debe ser preciso, debe definir exactamente qu&eacute; es lo que va a implementar&rdquo; [1]</p>\r\n\r\n<p style=\"margin-left:36.0pt;\"><strong>Requerimientos funcionales</strong></p>\r\n\r\n<p style=\"margin-left:35.4pt;\">&ldquo;Son declaraciones de los servicios que debe proporcionar el sistema, de la manera en que &eacute;ste debe reaccionar a entradas particulares y de c&oacute;mo se debe comportar en situaciones particulares.&rdquo;&nbsp;[1]</p>\r\n\r\n<p style=\"margin-left:36.0pt;\"><strong>Requerimientos no funcionales</strong></p>\r\n\r\n<p style=\"margin-left:35.4pt;\">&ldquo;Son restricciones de los servicios o funciones ofrecidos por el sistema. Incluyen restricciones de tiempo, sobre el proceso de desarrollo y puede mostrar documentos en diferentes formatos; la intenci&oacute;n de este requerimiento es que los visores para todos estos formatos est&eacute;n disponibles&rdquo; [1]</p>\r\n\r\n<p style=\"margin-left:35.4pt;\">Seg&uacute;n Somerville, los tipos de requerimientos no funcionales son:</p>\r\n\r\n<p style=\"margin-left:35.4pt;\"><strong>Requerimientos del producto</strong></p>\r\n\r\n<p style=\"margin-left:35.4pt;\">&ldquo;Especifican el comportamiento del producto. Algunos ejemplos son los requerimientos de rendimiento en la rapidez de ejecuci&oacute;n del sistema y cuanta memoria se requiere; los requerimientos de fiabilidad que fijan la tasa de fallos para que el sistema sea aceptable; los requerimientos de portabilidad, y los requerimientos de usabilidad&rdquo; [1]</p>\r\n\r\n<p style=\"margin-left:35.4pt;\"><strong>Requerimientos organizacionales</strong></p>\r\n\r\n<p style=\"margin-left:35.4pt;\">&ldquo;Estos requerimientos se derivan de pol&iacute;ticas y procedimientos existente en la organizaci&oacute;n del cliente y en la del desarrollador.&nbsp; Algunos ejemplos son los est&aacute;ndares, los de implementaci&oacute;n y los de entrega&rdquo; [1]</p>\r\n\r\n<p style=\"margin-left:35.4pt;\"><strong>Requerimientos externos</strong></p>\r\n\r\n<p style=\"margin-left:35.4pt;\">&ldquo;Este gran apartado incluye todos los requerimientos que se derivan de los factores externos al sistema y de su proceso de desarrollo. Estos pueden incluir los requerimientos de interoperabilidad, &eacute;ticos, legislativos, privacidad y de seguridad&rdquo;&nbsp;[1]</p>\r\n\r\n<p style=\"margin-left:36.0pt;\"><strong>Requerimientos de dominio</strong></p>\r\n\r\n<p style=\"margin-left:35.45pt;\">&ldquo;Se derivan del dominio de aplicaci&oacute;n del sistema m&aacute;s que de las necesidades espec&iacute;ficas de los usuarios. Normalmente incluyen terminolog&iacute;a especializada del dominio o referencias a conceptos del dominio&rdquo;&nbsp;[1]</p>\r\n', '', '', 'Ingeniería-de-Requerimientos', '1', 1),
(26, 'Especificación de Requisitos', 'La especificación de requisitos de software (ERS) es una descripción completa del comportamiento del sistema que se va a desarrollar. Incluye un conjunto de casos de uso que describe todas las interacciones que tendrán los usuarios con el software.', '<h3><strong><span style=\"color:#808080;\"><em><span style=\"line-height:1;\"><span style=\"font-size:14px;\">&ldquo;La especificaci&oacute;n de requisitos del software se produce como culminaci&oacute;n de la tarea de an&aacute;lisis. En ella se establece una descripci&oacute;n completa de la informaci&oacute;n, una descripci&oacute;n funcional, una indicaci&oacute;n de los requisitos de rendimiento y de las restricciones de dise&ntilde;o y unos criterios de validaci&oacute;n apropiados.&rdquo;</span></span></em></span></strong></h3>\r\n\r\n<h3><strong><span style=\"font-size:14px;\">Objetivo de la Especificaci&oacute;n de Requisitos del Sistema</span></strong></h3>\r\n\r\n<p><span style=\"line-height:1;\">&ldquo;El objetivo principal de la&nbsp;Especificaci&oacute;n de Requisitos del Sistema&nbsp;(ERS) es servir como&nbsp;medio de comunicaci&oacute;n&nbsp;entre clientes, usuarios, ingenieros de requisitos y desarrolladores. En la ERS deben recogerse tanto las necesidades de clientes y usuarios (necesidades del negocio, tambi&eacute;n conocidas como&nbsp;requisitos de usuario,&nbsp;requisitos de cliente,&nbsp;necesidades de usuario, etc.) como los requisitos que debe cumplir el sistema software a desarrollar para satisfacer dichas necesidades (requisitos del producto, tambi&eacute;n conocidos como&nbsp;requisitos de sistema&nbsp;o&nbsp;requisitos software).&rdquo;[1]</span></p>\r\n\r\n<p><span style=\"line-height:1;\">La ERS debe ser un documento consensuado entre todas las partes y tener un&nbsp;car&aacute;cter contractual, de forma que cualquier cambio que se desee realizar en &eacute;l una vez acordada la primera&nbsp;l&iacute;nea base&nbsp;deba aplicarse siguiendo el Procedimiento de Control de Cambios establecido en el proyecto.</span></p>\r\n\r\n<p><strong>Caracteristicas de una buena ERS</strong></p>\r\n\r\n<p>Las caracter&iacute;sticas de una buena ERS segun [2]&nbsp;son definidas por el est&aacute;ndar IEEE 830-1998. Una buena ERS debe ser:</p>\r\n\r\n<ul>\r\n	<li><span style=\"line-height:2;\">Completa. Todos los requerimientos deben estar reflejados en ella y todas las referencias deben estar definidas.</span></li>\r\n	<li><span style=\"line-height:2;\">Consistente. Debe ser coherente con los propios requerimientos y tambi&eacute;n con otros documentos de especificaci&oacute;n.</span></li>\r\n	<li><span style=\"line-height:2;\">Inequ&iacute;voca. La redacci&oacute;n debe ser clara de modo que no se pueda mal interpretar.</span></li>\r\n	<li><span style=\"line-height:2;\">Correcta. El software debe cumplir con los requisitos de la especificaci&oacute;n.</span></li>\r\n	<li><span style=\"line-height:2;\">Trazable. Se refiere a la posibilidad de verificar la historia, ubicaci&oacute;n o aplicaci&oacute;n de un &iacute;tem a trav&eacute;s de su identificaci&oacute;n almacenada y documentada.</span></li>\r\n	<li><span style=\"line-height:2;\">Priorizable. Los requisitos deben poder organizarse jer&aacute;rquicamente seg&uacute;n su relevancia para el negocio y clasific&aacute;ndolos en esenciales, condicionales y opcionales.</span></li>\r\n	<li><span style=\"line-height:2;\">Modificable. Aunque todo requerimiento es modificable, se refiere a que debe ser f&aacute;cilmente modificable.</span></li>\r\n	<li><span style=\"line-height:2;\">Verificable. Debe existir un m&eacute;todo finito sin costo para poder probarlo</span></li>\r\n</ul>\r\n\r\n<p><strong>Requerimientos funcionales</strong></p>\r\n\r\n<p><a href=\"http://4.bp.blogspot.com/-mF_B9Ig17Gw/TzRK1g4TWDI/AAAAAAAAALM/4Wmbu4qhSPk/s1600/funcio.jpeg\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5707268911004866610\" src=\"http://4.bp.blogspot.com/-mF_B9Ig17Gw/TzRK1g4TWDI/AAAAAAAAALM/4Wmbu4qhSPk/s320/funcio.jpeg\" style=\"margin-right:10px; float:left\" /></a><span style=\"line-height:1;\">Son declaraciones de los servicios que proveer&aacute; el sistema, de la manera en que &eacute;ste reaccionar&aacute; a entradas particulares. En algunos casos, los requerimientos funcionales de los sistemas tambi&eacute;n declaran expl&iacute;citamente lo que el sistema no debe hacer.</span></p>\r\n\r\n<p><span style=\"line-height:1;\">Los requerimientos funcionales de un sistema describen la funcionalidad o los servicios que se espera que &eacute;ste provea. Estos dependen del tipo de software y del sistema que se desarrolle y de los posibles usuarios del software. Cuando se expresan como requerimientos del usuario, habitualmente se describen de forma general mientras que los requerimientos funcionales del sistema describen con detalle la funci&oacute;n de &eacute;ste, sus entradas y salidas, excepciones, etc.</span></p>\r\n\r\n<p><span style=\"line-height:1;\">Muchos de los problemas de la ingenier&iacute;a de software provienen de la imprecisi&oacute;n en la especificaci&oacute;n de requerimientos. Para un desarrollador de sistemas es natural dar interpretaciones de un requerimiento ambiguo con el fin de simplificar su implementaci&oacute;n. Sin&nbsp;</span></p>\r\n\r\n<p><span style=\"line-height:1;\">embargo, a menudo no es lo que el cliente desea. Se tienen que estipular nuevos requerimientos y se deben hacer cambios al sistema, retrasando la entrega de &eacute;ste e incrementando el costo.</span></p>\r\n\r\n<p><span style=\"line-height:1;\">En principio, la especificaci&oacute;n de requerimientos funcionales de un sistema debe estar completa y ser consistente. La compleci&oacute;n significa que todos los servicios solicitados por el usuario est&aacute;n definidos. La consistencia significa que los requerimientos no tienen definiciones contradictorias. En la pr&aacute;ctica, para sistemas grandes y complejos, es imposible cumplir los requerimientos de consistencia y compleci&oacute;n. La raz&oacute;n de esto se debe parcialmente a la complejidad inherente del sistema y parcialmente a que los diferentes puntos de vista tienen necesidades inconsistentes. Estas inconsistencias son obvias cuando los requerimientos se especifican por primera vez. Los problemas emergen despu&eacute;s de un an&aacute;lisis profundo. Una vez que &eacute;stos se hayan descubierto en las diferentes revisiones o en las fases posteriores del ciclo de vida, se deben corregir en el documento de requerimientos.</span></p>\r\n\r\n<div style=\"text-align:center\">\r\n<figure class=\"image\" style=\"display:inline-block\"><img alt=\"Ejemplo de Requisitos Funcionales\" src=\"https://image.slidesharecdn.com/sistema-de-gestion-de-notas-1193946742490810-4/95/sistema-de-gestion-de-notas-5-728.jpg?cb=1193921543\" />\r\n<figcaption>Ejemplo de Requisitos Funcionales para un sistema de notas</figcaption>\r\n</figure>\r\n</div>\r\n\r\n<p><strong>Requerimientos no funcionales</strong></p>\r\n\r\n<p><span style=\"line-height:1;\">Son restricciones de los servicios o funciones ofrecidos por el sistema. Incluyen restricciones de tiempo, sobre el proceso de desarrollo, est&aacute;ndares, etc.</span></p>\r\n\r\n<p><span style=\"line-height:1;\">Son aquellos requerimientos que no se refieren directamente a las funciones espec&iacute;ficas que entrega el sistema, sino a las propiedades emergentes de &eacute;ste como la fiabilidad, la respuesta en el tiempo y la capacidad de almacenamiento. De forma alternativa, definen las restricciones del sistema como la capacidad de los dispositivos de entrada/salida y la representaci&oacute;n de datos que se utiliza en la interface del sistema.</span></p>\r\n\r\n<p><span style=\"line-height:1;\">Muchos requerimientos no funcionales se refieren al sistema como un todo m&aacute;s que a rasgos particulares del mismo. Esto significa que a menudo con m&aacute;s cr&iacute;ticos que los requerimientos funcionales particulares. Mientras que el incumplimiento de este &uacute;ltimo degradar&aacute; el sistema, una falla en un requerimiento no funcional del sistema lo inutiliza.</span></p>\r\n\r\n<p><span style=\"line-height:1;\">Los requerimientos no funcionales surgen de la necesidad del usuario, debido a las restricciones en el presupuesto, a las pol&iacute;ticas de la organizaci&oacute;n, a la necesidad de interoperabilidad con otros sistemas de software o hardware o a factores externos como los reglamentos de seguridad, las pol&iacute;ticas de privacidad, etc&eacute;tera.</span></p>\r\n\r\n<p><span style=\"line-height:1;\">Estos diferentes tipos de requerimientos se clasifican de acuerdo con sus implicaciones.</span></p>\r\n\r\n<ul>\r\n	<li><span style=\"line-height:2;\">Requerimientos del producto. Especifican el comportamiento del producto; como los requerimientos de desempe&ntilde;o en la rapidez de ejecuci&oacute;n del sistema y cu&aacute;nta memoria se requiere; los de fiabilidad que fijan la tasa de fallas para que el sistema sea aceptable; los de portabilidad y los de usabilidad.</span></li>\r\n	<li><span style=\"line-height:2;\">Requerimientos organizacionales. Se derivan de las pol&iacute;ticas y procedimientos existentes en la organizaci&oacute;n del cliente y en la del desarrollador: est&aacute;ndares en los procesos que deben utilizarse; requerimientos de implementaci&oacute;n como los lenguajes de programaci&oacute;n o el m&eacute;todo de dise&ntilde;o a utilizar, y los requerimientos de entrega que especifican cu&aacute;ndo se entregar&aacute; el producto y su documentaci&oacute;n.</span></li>\r\n	<li><span style=\"line-height:2;\">Requerimientos externos. Se derivan de los factores externos al sistema y de su proceso de desarrollo. Incluyen los requerimientos de interoperabilidad que definen la manera en que el sistema interact&uacute;a con los otros sistemas de la organizaci&oacute;n; los requerimientos legales que deben seguirse para asegurar que el sistema opere dentro de la ley, y los requerimientos &eacute;ticos. Estos &uacute;ltimos son impuestos al sistema para asegurar que ser&aacute; aceptado por el usuario y por el p&uacute;blico en general.</span></li>\r\n</ul>\r\n\r\n<p><strong><span style=\"font-size:14px;\">Requerimientos de dominio</span></strong></p>\r\n\r\n<p><span style=\"line-height:1;\">Cuando hablamos de dominio en dise&ntilde;o nos referimos a aquella parte del dise&ntilde;o que es particular al problema que se quiere resolver. Desafortunadamente, por su misma naturaleza, es imposible ofrecer una metodolog&iacute;a precisa debido a que cada caso es diferente. Los requerimientos de dominio (particulares) para una p&aacute;gina web pueden ser muy diferentes de los de dominio (particulares) para un antivirus, raz&oacute;n por la cual la mayor&iacute;a de los autores omiten ahondar en ese tema.<br />\r\n<br />\r\nPor ejemplo, la mayor&iacute;a de los armazones de desarrollo de aplicaciones (por ejemplo, las MFC y .NET) te ofrecen &quot;casi todo&quot;, menos las clases de dominio, cuyos requerimientos debes t&uacute; especificar (como Dios te d&eacute; a entender) para desarrollar una aplicaci&oacute;n de utilidad.</span></p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"\" src=\"https://image.slidesharecdn.com/sesion13ingderequerimientoscompleta-101015233412-phpapp01/95/ingenieria-de-requerimientos-13-728.jpg?cb=1287185834\" /></p>\r\n', 'df263d996281d984952c07998dc54358.jpeg', '6Q5n3gtNsbY', 'Especificación-de-Requisitos', '1', 1),
(27, 'Estándar IEEE 830-1998', 'El estándar 830-1998 fue generado por un equipo de trabajo del IEEE [1], su finalidad es la integración de los requerimientos del sistema desde la perspectiva del usuario, cliente y desarrollador.', '<p>Esta ha sido nuestra propuesta durante la existencia como blog, la 830 se encarga de poner las pautas para identificar y esquemagtizar las requierimientos de software. como parte integral del disarrollo de software, sino tambien como base fundamental de este, todo esto con el fin de no caer en cambios, errores o situaciones que pongan en peligro la creacion de una solucion, producto o software; incurriendo en gastos o cambios producto de una mal analisis de requerimientos.</p>\r\n\r\n<p><strong><span style=\"font-size:14px;\">Objetivos</span>:</strong><br />\r\nYa conociendo lo que es un ERS se debe establecer que funci&oacute;n ubicada en el contexto de desarrollo de software por esto se plantea lo siguiente:</p>\r\n\r\n<ul>\r\n	<li><span style=\"line-height:2;\">Un cliente describa claramente lo que quiere</span></li>\r\n	<li><span style=\"line-height:2;\">Un proveedor entienda claramente lo que el cliente quiere</span></li>\r\n	<li><span style=\"line-height:2;\">Se establezcan bases para un contrato de desarrollo (o de compra-venta)</span></li>\r\n	<li><span style=\"line-height:2;\">Se reduzca el esfuerzo de an&aacute;lisis, dise&ntilde;o, y programaci&oacute;n (evitando re-trabajos)</span></li>\r\n</ul>\r\n\r\n<p><span style=\"line-height:2;\">Para un total enendimientos de los conceptos que se manejan dentro de esta norma segun [2]&nbsp;se encuntran los siguientes:&nbsp;</span></p>\r\n\r\n<p><strong>Definiciones</strong>. En general las definiciones de los t&eacute;rminos usados en estas especificaciones est&aacute;n conforme a las definiciones proporcionadas en IEEE Std 610.12-1990.</p>\r\n\r\n<p><strong>Contrato</strong>: Un documento es legalmente obligatorio y en &eacute;l estar&aacute;n de acuerdo las partes del cliente y proveedor. Esto incluye los requisitos t&eacute;cnicos y requerimientos de la organizaci&oacute;n, costo y tiempo para un producto. Un contrato tambi&eacute;n puede contener la informaci&oacute;n informal pero &uacute;til como los compromisos o expectativas de las partes involucradas.</p>\r\n\r\n<p><strong>Cliente</strong>: La(s) persona(s) que paga(n) por el producto y normalmente (pero no necesariamente) definen los requisitos. En la pr&aacute;ctica el cliente y el proveedor pueden ser miembros de la misma organizaci&oacute;n.</p>\r\n\r\n<p><strong>Proveedor</strong>: La(s) persona(s) que producen un producto para un cliente.</p>\r\n\r\n<p><strong>Usuario</strong>: La(s) persona(s) que operan o act&uacute;an rec&iacute;procamente directamente con el producto. El usuario(s) y el cliente(s) no es (son) a menudo las mismas persona(s).</p>\r\n\r\n<p style=\"text-align: center;\"><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"485\" marginheight=\"0\" marginwidth=\"0\" name=\"Ingeniería de Software\" scrolling=\"no\" src=\"//www.slideshare.net/slideshow/embed_code/key/s6I22Sk9JhLip1\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" title=\"Presentación Norma IEEE 8030\" width=\"100%\"></iframe></p>\r\n\r\n<p>&nbsp;</p>\r\n', '2ab56412b1163ee131e1246da0955bd1.png', 'tbL_PtjPzoQ', 'Estándar-IEEE-830-1998', '1', 1),
(28, 'Fundamentos del Software', 'Los Fundamentos y Ciclo de Vida de Software, establecen definiciones sobre sistema de información (SI) y cuáles son sus componentes esenciales, ya que conocer estos aspectos nos permite ir comprendiendo ciertos conceptos relacionados con el ciclo de vida ', '<h1><strong><span style=\"font-size:14px;\">Sistemas de informaci&oacute;n</span></strong></h1>\r\n\r\n<p style=\"text-align:center\"><img alt=\"sistema-de-informacion\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/sistema-de-informacion1.jpg?w=474\" /></p>\r\n\r\n<p>A continuaci&oacute;n se detallar&aacute;n conceptos y aspectos importantes acerca de los sistemas de informaci&oacute;n, para lograr entender la importancia de estos. Entre los varios aspectos a conocer est&aacute;n:</p>\r\n\r\n<p><strong><span style=\"font-size:14px;\">Sistemas</span></strong></p>\r\n\r\n<p>Se puede definir al sistema como un conjunto de varios elementos que se relacionan entre s&iacute;, y logran un objetivo por medio de la realizaci&oacute;n de actividades, la cuales operan con elementos de entradas para lograr salidas de nuevos elementos o resultados.</p>\r\n\r\n<p>El diccionario de la Real Academia Espa&ntilde;ola (RAE) define el vocablo sistema como &ldquo;un conjunto de cosas que ordenadamente relacionadas entre s&iacute; contribuyen a un determinado objetivo&rdquo; y el libro de Inform&aacute;tica y comunicaciones en la empresa, por sistema entiende &ldquo;un conjunto de elementos en interacci&oacute;n din&aacute;mica organizados para la consecuci&oacute;n de un objetivo&rdquo;. Otros autores, como es el caso de Vicen&ccedil; Fern&aacute;ndez Alarc&oacute;n, en el libro de desarrollo de Sistemas de Informaci&oacute;n, define al SI como &ldquo;un conjunto de componentes que interaccionan entre s&iacute; para lograr un objetivo en com&uacute;n.&rdquo;; Adem&aacute;s dicho autor agrega que &ldquo;existe una variedad de sistemas, la mayor&iacute;a de ellos pueden representarse a trav&eacute;s de un modelo formado por cinco bloques b&aacute;sicos: elementos de entrada, elemento de salida, secci&oacute;n de transformaci&oacute;n, mecanismos de control y objetivos.&rdquo;</p>\r\n\r\n<h3><span style=\"font-size:14px;\"><strong>Sistemas de informaci&oacute;n</strong></span></h3>\r\n\r\n<p><img alt=\"sistema-de-informacion\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/sistema-de-informacion.jpg?w=230&amp;h=229\" style=\"float:left\" /></p>\r\n\r\n<p><span style=\"font-size:14px;\">A parti</span>r de las definiciones anteriores (de sistemas), podemos establecer que un sistema de informaci&oacute;n es aqu&eacute;l que permite recopilar, organizar y manipular un<br />\r\nconjunto de informaci&oacute;n necesaria, para que los integrantes de una organizaci&oacute;n puedan tomar decisiones certeras.</p>\r\n\r\n<p>Entonces se puede decir que un sistema de informaci&oacute;n es un conjunto de componentes enfocados a la manipulaci&oacute;n y administraci&oacute;n de la informaci&oacute;n, los cuales est&aacute;n organizados y listos para su utilizaci&oacute;n. Pressman Roger, Ph.D. [1992] define un sistema basado en computadora como: &ldquo;Un conjunto u ordenaci&oacute;n de elementos organizados para llevar a cabo alg&uacute;n m&eacute;todo, procedimiento o control mediante el procesamiento de informaci&oacute;n&rdquo;.</p>\r\n\r\n<p>Dar una definici&oacute;n exacta de lo que es un Sistemas de informaci&oacute;n, no es f&aacute;cil, ya que no existe un definici&oacute;n en concreta. Actualmente la expresi&oacute;n &ldquo;Sistemas de Informaci&oacute;n&rdquo; es utilizada de manera com&uacute;n en&nbsp;las organizaciones.</p>\r\n\r\n<p>A pesar de aquello existen autores que definen como un &ldquo;conjunto de componentes relacionados entre s&iacute;, para lograr un objetivo com&uacute;n, el cual es cumplir con las necesidades de informaci&oacute;n dentro de una organizaci&oacute;n&rdquo;.</p>\r\n\r\n<p>En el libro de inform&aacute;tica y comunicaciones en la empresa, se define al sistema de informaci&oacute;n como: &ldquo;Un conjunto de recursos t&eacute;cnicos, humanos y econ&oacute;micos, interrelacionados din&aacute;micamente, y organizados en torno al objetivo de satisfacer las necesidades de informaci&oacute;n de una organizaci&oacute;n empresarial para la gesti&oacute;n y la correcta adopci&oacute;n de decisiones.&rdquo;</p>\r\n\r\n<p>En la actualidad, el entorno que nos rodea est&aacute; lleno de ejemplos de sistemas, tales como:</p>\r\n\r\n<ul>\r\n	<li>El sistema de matriculaci&oacute;n vehicular de Agencia Nacional de Transito (ANT).</li>\r\n	<li>El de registro de t&iacute;tulos en el Ecuador (Portal Web de la Educaci&oacute;n Superior)</li>\r\n	<li>El sistema de matriculaci&oacute;n de la Universidad T&eacute;cnica de Machala (SIUTMACH). En el caso del SIUTMACH, el estudiante accede y puede matricularse en las asignaturas pertinentes (mecanismos de control), verificar sus notas, actualizar sus datos personales (entrada de informaci&oacute;n), teniendo como objetivo del sistema optimizar los procesos organizacionales.</li>\r\n</ul>\r\n\r\n<h3><strong><span style=\"font-size:14px;\">Elementos fundamentales que forman a los SI.</span></strong></h3>\r\n\r\n<p>A continuaci&oacute;n citaremos los elementos que aparecen el libro de Inform&aacute;tica y comunicaciones en la empresa:</p>\r\n\r\n<ul>\r\n	<li>La informaci&oacute;n: Lo capturado, almacenado, procesado y distribuido por el sistema. Se puede decir que es la parte fundamental tanto para la empresa como para el sistema</li>\r\n	<li>Las personas: introducen y analizan la informaci&oacute;n del sistema usando la informaci&oacute;n, tecnolog&iacute;a y otros recursos de la instituci&oacute;n.</li>\r\n	<li>Los equipos de tratamiento de la informaci&oacute;n e interacci&oacute;n con los usuarios: Se encarga de almacenar y procesar la informaci&oacute;n realizada por los usuarios, estos llegan a ser el hardware, software y redes de comunicaciones</li>\r\n	<li>Las normas y/o t&eacute;cnicas de trabajo: m&eacute;todos utilizados por las personas y las tecnolog&iacute;as para desarrollar sus habilidades.</li>\r\n</ul>\r\n', '', '', 'Fundamentos-del-Software', '1', 1),
(29, 'Tipos de sistemas', 'Existen divesos tipos de sistemas entre los cuales el usuario puede interactuar, realizar procesos, modelar, etc.', '<h3><strong><span style=\"font-size:12px;\">TPS &ndash; Transaction Processing Systems (Sistema de procesamiento de transacciones)</span></strong></h3>\r\n\r\n<p>Recolecta, almacena, modifica y recupera toda la informaci&oacute;n generada por las transacciones producidas en una organizaci&oacute;n. &nbsp;Estos sistemas permiten a la organizaci&oacute;n mejorar y mantener un seguimiento o registro de sus operaciones o transacciones rutinarias, cuyos datos son almacenadas en una base de datos. Es por esta raz&oacute;n que tambi&eacute;n se les llama sistemas de procesamiento de datos.</p>\r\n\r\n<p><img alt=\"slide_4\" data-attachment-id=\"55\" data-comments-opened=\"1\" data-image-description=\"\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}\" data-image-title=\"slide_4\" data-large-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474?w=474\" data-medium-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474?w=300\" data-orig-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474\" data-orig-size=\"960,720\" data-permalink=\"https://ingenieriadesoftwareutmachala.wordpress.com/2017/01/18/titulo-de-la-entrada-de-blog-2/slide_4/\" sizes=\"(max-width: 474px) 100vw, 474px\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474\" srcset=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474 474w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=948 948w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=150 150w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=300 300w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=768 768w\" /></p>\r\n\r\n<h3><strong><span style=\"font-size:14px;\">OAS &ndash; Office Automation Systems (Sistema de automatizaci&oacute;n de oficinas )</span></strong></h3>\r\n\r\n<p>Funcionan en la automatizaci&oacute;n de la oficina. Consisten en aplicaciones destinadas a ayudar al trabajo diario del administrativo de una organizaci&oacute;n, forman parte de este tipo de software los procesadores de textos, las hojas de c&aacute;lculo, los editores de presentaciones, los clientes de correo electr&oacute;nico, etc.</p>\r\n\r\n<h3><strong><span style=\"font-size:12px;\">KWS &ndash; Knowledge Work Systems (Sistemas de Trabajo con Conocimientos)</span></strong></h3>\r\n\r\n<p>Funcionan en el trabajo del conocimiento. Sistemas de informaci&oacute;n que apoyan a los trabajadores del conocimiento en la creaci&oacute;n e integraci&oacute;n del nuevo conocimiento en una organizaci&oacute;n.</p>\r\n\r\n<h3>MIS &ndash; Management Information Systems (Sistema de informaci&oacute;n gerencial)</h3>\r\n\r\n<p>Son una colecci&oacute;n de sistemas de informaci&oacute;n que interact&uacute;an entre s&iacute; y que proporcionan informaci&oacute;n tanto para las necesidades de las operaciones como de la administraci&oacute;n</p>\r\n\r\n<p><img alt=\"management-information-system-figure-1\" data-attachment-id=\"56\" data-comments-opened=\"1\" data-image-description=\"\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"management-information-system-figure-1\" data-large-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474?w=474\" data-medium-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474?w=300\" data-orig-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474\" data-orig-size=\"567,237\" data-permalink=\"https://ingenieriadesoftwareutmachala.wordpress.com/2017/01/18/titulo-de-la-entrada-de-blog-2/management-information-system-figure-1/\" sizes=\"(max-width: 474px) 100vw, 474px\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474\" srcset=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474 474w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=150 150w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=300 300w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png 567w\" /></p>\r\n\r\n<h3><span style=\"font-size:14px;\"><strong>DSS &ndash; Decision Support Systems (Sistema de apoyo de decisiones)</strong></span></h3>\r\n\r\n<p>Los DSS son herramientas de mucha utilidad en Inteligencia empresarial, permiten realizar el an&aacute;lisis de las diferentes variables de negocio para apoyar el proceso de toma de decisiones de los directivos. Ayuda a los gerentes a tomar decisiones para tratar de resolver problemas semiestructurados.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"captura\" data-attachment-id=\"57\" data-comments-opened=\"1\" data-image-description=\"\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"captura\" data-large-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474?w=474\" data-medium-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474?w=300\" data-orig-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474\" data-orig-size=\"660,461\" data-permalink=\"https://ingenieriadesoftwareutmachala.wordpress.com/2017/01/18/titulo-de-la-entrada-de-blog-2/captura/\" sizes=\"(max-width: 474px) 100vw, 474px\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474\" srcset=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474 474w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=150 150w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=300 300w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png 660w\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Los sistemas de informaci&oacute;n se desarrollan con diversos prop&oacute;sitos, s<strong>eg&uacute;n las necesidades del negocio</strong>, tenemos:</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas de Controles Embebidos.-&nbsp;</strong></span>sistemas que controlan y manejan dispositivos de hardware. Por ejemplo: software para tel&eacute;fonos celulares, anti-bloqueo de frenos, microondas, etc.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas de procesamiento por lotes.</strong>&ndash;</span> Sistemas dise&ntilde;ados para procesar datos en grandes vol&uacute;menes. Por ejemplo: sistemas de facturaci&oacute;n.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas de entretenimiento:</strong>&nbsp;</span>sistemas principalmente de uso personal y orientado a entretener al usuario.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas para modelamiento y simulaci&oacute;n:</strong></span>&nbsp;sistemas para cient&iacute;ficos e ingenieros para modelar procesos f&iacute;sicos o experimentos. Usualmente requieren altos niveles de desempe&ntilde;o.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas de recolecci&oacute;n de datos:</strong></span>&nbsp;colectan datos desde su entorno por medio de un conjunto de sensores y usualmente se conectan dentro de maquinarias o en ubicaciones remotas.</p>\r\n', '', '', 'Tipos-de-sistemas', '1', 1);
INSERT INTO `post` (`id_pos`, `tit_pos`, `des_pos`, `cue_pos`, `img_pos`, `vid_pos`, `url_pos`, `sta_pos`, `id_use`) VALUES
(30, 'Tipos de sistemas', 'Existen diversos tipos de sistemas aplicados en diversos ambitos, mismo que sirven para resolver un sin numero de problemas.', '<h3><strong><span style=\"font-size:14px;\">TPS &ndash; Transaction Processing Systems (Sistema de procesamiento de transacciones)</span></strong></h3>\r\n\r\n<p>Recolecta, almacena, modifica y recupera toda la informaci&oacute;n generada por las transacciones producidas en una organizaci&oacute;n. &nbsp;Estos sistemas permiten a la organizaci&oacute;n mejorar y mantener un seguimiento o registro de sus operaciones o transacciones rutinarias, cuyos datos son almacenadas en una base de datos. Es por esta raz&oacute;n que tambi&eacute;n se les llama sistemas de procesamiento de datos.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"slide_4\" data-attachment-id=\"55\" data-comments-opened=\"1\" data-image-description=\"\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}\" data-image-title=\"slide_4\" data-large-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474?w=474\" data-medium-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474?w=300\" data-orig-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474\" data-orig-size=\"960,720\" data-permalink=\"https://ingenieriadesoftwareutmachala.wordpress.com/2017/01/18/titulo-de-la-entrada-de-blog-2/slide_4/\" sizes=\"(max-width: 474px) 100vw, 474px\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474\" srcset=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=474 474w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=948 948w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=150 150w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=300 300w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/slide_41.jpg?w=768 768w\" /></p>\r\n\r\n<h3><span style=\"font-size:14px;\"><strong>OAS &ndash; Office Automation Systems (Sistema de automatizaci&oacute;n de oficinas )</strong></span></h3>\r\n\r\n<p>Funcionan en la automatizaci&oacute;n de la oficina. Consisten en aplicaciones destinadas a ayudar al trabajo diario del administrativo de una organizaci&oacute;n, forman parte de este tipo de software los procesadores de textos, las hojas de c&aacute;lculo, los editores de presentaciones, los clientes de correo electr&oacute;nico, etc.</p>\r\n\r\n<h3><strong><span style=\"font-size:14px;\">KWS &ndash; Knowledge Work Systems (Sistemas de Trabajo con Conocimientos)</span></strong></h3>\r\n\r\n<p>Funcionan en el trabajo del conocimiento. Sistemas de informaci&oacute;n que apoyan a los trabajadores del conocimiento en la creaci&oacute;n e integraci&oacute;n del nuevo conocimiento en una organizaci&oacute;n.</p>\r\n\r\n<h3><span style=\"font-size:14px;\"><strong>MIS &ndash; Management Information Systems (Sistema de informaci&oacute;n gerencial)</strong></span></h3>\r\n\r\n<p>Son una colecci&oacute;n de sistemas de informaci&oacute;n que interact&uacute;an entre s&iacute; y que proporcionan informaci&oacute;n tanto para las necesidades de las operaciones como de la administraci&oacute;n</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"management-information-system-figure-1\" data-attachment-id=\"56\" data-comments-opened=\"1\" data-image-description=\"\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"management-information-system-figure-1\" data-large-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474?w=474\" data-medium-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474?w=300\" data-orig-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474\" data-orig-size=\"567,237\" data-permalink=\"https://ingenieriadesoftwareutmachala.wordpress.com/2017/01/18/titulo-de-la-entrada-de-blog-2/management-information-system-figure-1/\" sizes=\"(max-width: 474px) 100vw, 474px\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474\" srcset=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=474 474w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=150 150w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png?w=300 300w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/management-information-system-figure-1.png 567w\" /></p>\r\n\r\n<h3><span style=\"font-size:14px;\"><strong>DSS &ndash; Decision Support Systems (Sistema de apoyo de decisiones)</strong></span></h3>\r\n\r\n<p>Los DSS son herramientas de mucha utilidad en Inteligencia empresarial, permiten realizar el an&aacute;lisis de las diferentes variables de negocio para apoyar el proceso de toma de decisiones de los directivos. Ayuda a los gerentes a tomar decisiones para tratar de resolver problemas semiestructurados.</p>\r\n\r\n<p style=\"text-align:center\"><img alt=\"captura\" data-attachment-id=\"57\" data-comments-opened=\"1\" data-image-description=\"\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"captura\" data-large-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474?w=474\" data-medium-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474?w=300\" data-orig-file=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474\" data-orig-size=\"660,461\" data-permalink=\"https://ingenieriadesoftwareutmachala.wordpress.com/2017/01/18/titulo-de-la-entrada-de-blog-2/captura/\" sizes=\"(max-width: 474px) 100vw, 474px\" src=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474\" srcset=\"https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=474 474w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=150 150w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png?w=300 300w, https://ingenieriadesoftwareutmachala.files.wordpress.com/2017/01/captura.png 660w\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Los sistemas de informaci&oacute;n se desarrollan con diversos prop&oacute;sitos, s<strong>eg&uacute;n las necesidades del negocio</strong>, tenemos:</p>\r\n\r\n<p><strong><span style=\"font-size:14px;\">Sistemas de Controles Embebidos.-</span>&nbsp;</strong>sistemas que controlan y manejan dispositivos de hardware. Por ejemplo: software para tel&eacute;fonos celulares, anti-bloqueo de frenos, microondas, etc.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas de procesamiento por lotes.</strong>&ndash;</span> Sistemas dise&ntilde;ados para procesar datos en grandes vol&uacute;menes. Por ejemplo: sistemas de facturaci&oacute;n.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas de entretenimiento:</strong></span>&nbsp;sistemas principalmente de uso personal y orientado a entretener al usuario.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas para modelamiento y simulaci&oacute;n:</strong>&nbsp;</span>sistemas para cient&iacute;ficos e ingenieros para modelar procesos f&iacute;sicos o experimentos. Usualmente requieren altos niveles de desempe&ntilde;o.</p>\r\n\r\n<p><span style=\"font-size:14px;\"><strong>Sistemas de recolecci&oacute;n de datos:</strong>&nbsp;</span>colectan datos desde su entorno por medio de un conjunto de sensores y usualmente se conectan dentro de maquinarias o en ubicaciones remotas.</p>\r\n', 'ec8956637a99787bd197eacd77acce5e.png', '', 'Tipos-de-sistemas', '1', 1),
(31, 'title', 'description', '<p><img alt=\"Resultado de imagen para metodos\" src=\"http://www.ergonautas.upv.es/imagenes/fbb103628_300.png\" /></p>\r\n', '', '', 'title', '1', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `preguntas`
--

DROP TABLE IF EXISTS `preguntas`;
CREATE TABLE IF NOT EXISTS `preguntas` (
  `id_pre` int(11) NOT NULL AUTO_INCREMENT,
  `pre_num` int(11) DEFAULT NULL,
  `pre_def` varchar(255) DEFAULT NULL,
  `pre_rsp` varchar(2) DEFAULT NULL,
  `pre_tip` varchar(20) DEFAULT '1',
  `id_eva` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_pre`),
  KEY `IX_Relationship10` (`id_eva`)
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `preguntas`
--

INSERT INTO `preguntas` (`id_pre`, `pre_num`, `pre_def`, `pre_rsp`, `pre_tip`, `id_eva`) VALUES
(30, 0, 'Herramientas CASE significa ', 'a', '1', 11),
(31, 0, 'La idea básica de los diagramas de base de datos relacional es ', 'c', '1', 11),
(34, 0, 'Herramientas individuales para ayudar al desarrollador de software o administrador de proyecto durante una o más fases del desarrollo de software, corresponde a la definición de : ', 'a', '1', 11),
(35, 0, '¿Enterprise Architect es capaz de generar códigos, a partir de diagramas, para? ', 'd', '1', 11),
(36, 0, 'Es una ventaja: \"Se disminuyen los tiempos de entrega del software.\" además de tener como desventaja \"El ajuste de requerimientos podría producir un sistema que no satisface las necesidades reales del usuario\"; el modelo al que nos referimos es:', 'a', '1', 12),
(37, 0, 'Permiten desarrollar y mantener el software de forma más precisa, consistente y estructurada.', 'c', '1', 12),
(38, 0, 'La definición \"Aplicaciones que son ejecutadas en un computador remoto y los usuarios acceden a ellas desde sus propias PCs o terminales. Por ejemplo: sistemas de información, aplicaciones Web.\" pertenece a .', 'b', '1', 12),
(39, 0, 'El analista de sistema evalúa en forma sistemática cómo interactúan los usuarios con la tecnología y cómo operan las empresas, para lo cual examina los procesos de entrada/salida de los datos y la producción de información con la intención de mejorar los ', 'a', '1', 12),
(40, 0, 'Análisis y definición de requerimientos, diseño del sistema y del software, implementación y pruebas de unidades, integración y pruebas del sistema, funcionamiento y mantenimiento.   ¿Son etapas que tiene el modelo cascada?', 'a', '1', 12);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `referencias`
--

DROP TABLE IF EXISTS `referencias`;
CREATE TABLE IF NOT EXISTS `referencias` (
  `id_ref` int(11) NOT NULL AUTO_INCREMENT,
  `nom_ref` varchar(255) DEFAULT NULL,
  `id_pos` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_ref`),
  KEY `IX_Relationship14` (`id_pos`)
) ENGINE=InnoDB AUTO_INCREMENT=115 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `referencias`
--

INSERT INTO `referencias` (`id_ref`, `nom_ref`, `id_pos`) VALUES
(61, 'A. Roldan, «Ciberaula,» [En línea]. Available: http://www.ciberaula.com/articulo/tecnologia_orientada_objetos.', 14),
(62, 'U. d. Granada, «Elvex,» [En línea]. Available: http://elvex.ugr.es/idbis/db/docs/design/2- requirements.pdf.', 14),
(63, 'L. A. C. Fernández, «MSDN Microsoft,» 2016. [En línea]. Available: https://msdn.microsoft.com/es-es/library/bb972232.aspx.', 14),
(64, 'U. d. A. y. e. M. d. E. Nacional., 12 Junio 2015. [En línea]. Available: http://aprendeenlinea.udea.edu.co/lms/men_udea/mod/page/view.php?id=19537.', 14),
(65, '«Wikipedia,» 29 Noviembre 2016. [En línea]. Available: https://es.wikipedia.org/wiki/Lenguaje_unificado_de_modelado.', 14),
(66, ' «Programacion Orientada a Objetos,» Julio 2008. [En línea]. Available: https://poolhjc.wordpress.com/herencia/.', 14),
(67, 'E. Mediavilla, «CTR,» [En línea]. Available: http://www.ctr.unican.es/asignaturas/mc_oo/doc/m_estructural.pdf.', 14),
(68, ' D. Lara, «Styde,» [En línea]. Available: https://styde.net/encapsulamiento-en-laprogramacion-orientada-a-objetos/.', 14),
(69, 'https://msdn.microsoft.com/es-ec/library/dd409360.aspx', 16),
(70, 'http://www.codecompiling.net/files/slides/UML_clase_06_UML_secuencia.pdf', 17),
(71, 'https://msdn.microsoft.com/es-ec/library/dd409377.aspx', 17),
(72, '[En línea]. Available: http://users.dsic.upv.es/asignaturas/eui/mtp/docpracticas/intro_case_SA.pdf. ', 18),
(74, 'March 2010. [En línea]. Available: http://usdownloads.quest.com/Repository/support.quest.com/Toad%20Data%20Modeler/ 3.5/Documentation/UserGuide.pdf. ', 20),
(87, 'S. SYSTEMS, «SPARX SYSTEMS,» [En línea]. Available: http://www.sparxsystems.com.au/.', 22),
(98, '[En Linea].  Available: http://cswww.essex.ac.uk/staff/turnr/cswww.essex.ac.uk_files/Mypapers/foundations-specification.pdf', 26),
(99, 'IEEE. [En Linea].  Available: htttp://www.ctr.unican.es/asignaturas/is1/IEEE830_esp.pdf', 26),
(100, 'https://products.office.com/es-mx/visio/microsoft-visio-top-features-diagram-software', 21),
(101, 'S. SYSTEMS, «SPARX SYSTEMS,» [En línea]. Available: http://www.sparxsystems.com.au/.', 21),
(112, 'https://www.ieee.org/index.html', 27),
(113, 'http://artemisa.unicauca.edu.co/~cardila/LAB_IS_01_Guia_Documento_IEEE830__2016.pdf', 27),
(114, 'I. Sommerville, Ingeniería del software, Madrid: Pearson Educación, S. A., 2005. ', 25);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `roles`
--

DROP TABLE IF EXISTS `roles`;
CREATE TABLE IF NOT EXISTS `roles` (
  `id_rol` int(11) NOT NULL AUTO_INCREMENT,
  `nom_rol` char(20) DEFAULT NULL,
  PRIMARY KEY (`id_rol`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `roles`
--

INSERT INTO `roles` (`id_rol`, `nom_rol`) VALUES
(1, 'Admin'),
(2, 'User');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `subtemas`
--

DROP TABLE IF EXISTS `subtemas`;
CREATE TABLE IF NOT EXISTS `subtemas` (
  `id_sbt` int(11) NOT NULL AUTO_INCREMENT,
  `id_pos` int(11) DEFAULT NULL,
  `id_tem` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_sbt`),
  KEY `IX_Relationship4` (`id_pos`) USING BTREE,
  KEY `IX_Relationship8` (`id_tem`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=54 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `subtemas`
--

INSERT INTO `subtemas` (`id_sbt`, `id_pos`, `id_tem`) VALUES
(13, 15, 8),
(14, 16, 8),
(15, 17, 8),
(19, 20, 9),
(35, 22, 9),
(41, 26, 10),
(42, 21, 9),
(50, 27, 10),
(53, 30, 11);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `temas`
--

DROP TABLE IF EXISTS `temas`;
CREATE TABLE IF NOT EXISTS `temas` (
  `id_tem` int(11) NOT NULL AUTO_INCREMENT,
  `id_pos` int(11) DEFAULT NULL,
  PRIMARY KEY (`id_tem`),
  KEY `IX_Relationship3` (`id_pos`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `temas`
--

INSERT INTO `temas` (`id_tem`, `id_pos`) VALUES
(8, 14),
(9, 18),
(10, 25),
(11, 28);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `user_eval`
--

DROP TABLE IF EXISTS `user_eval`;
CREATE TABLE IF NOT EXISTS `user_eval` (
  `id_eval_not` int(11) NOT NULL AUTO_INCREMENT,
  `id_nrg` int(11) DEFAULT NULL,
  `id_eva` int(11) DEFAULT NULL,
  `nota` double DEFAULT NULL,
  PRIMARY KEY (`id_eval_not`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=latin1 ROW_FORMAT=FIXED;

--
-- Volcado de datos para la tabla `user_eval`
--

INSERT INTO `user_eval` (`id_eval_not`, `id_nrg`, `id_eva`, `nota`) VALUES
(32, 34, 11, 50);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `user_nrg`
--

DROP TABLE IF EXISTS `user_nrg`;
CREATE TABLE IF NOT EXISTS `user_nrg` (
  `id_nrg` int(11) NOT NULL AUTO_INCREMENT,
  `nom_nrg` varchar(100) DEFAULT NULL,
  `num_eval` int(11) DEFAULT '0',
  `not_tot` double DEFAULT '0',
  PRIMARY KEY (`id_nrg`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `user_nrg`
--

INSERT INTO `user_nrg` (`id_nrg`, `nom_nrg`, `num_eval`, `not_tot`) VALUES
(1, 'Daniel Guaycha', 6, 0.20972222222222223),
(2, 'Jose Gabriel', 14, 3.8713635132595945),
(3, 'Jose Guaycha', 3, 0),
(4, 'Jose Andres', 0, 0),
(5, 'dasdasda dadsada', 0, 0),
(6, 'dasdasd dasdasda', 0, 0),
(7, 'sdasda dasdasda', 0, 0),
(8, 'Eval Eval', 1, 25),
(9, 'Daniel G', 0, 0),
(10, 'Danie daniel', 0, 0),
(11, 'Andres Jose', 0, 0),
(12, 'Daniel jose', 0, 0),
(13, 'Daniek Jise', 0, 0),
(14, 'Damuna dasd', 0, 0),
(15, 'dasda dasdad', 0, 0),
(16, 'dasda dasda', 0, 0),
(17, 'sdasda dasda', 0, 0),
(18, 'sadasd dasdasd', 0, 0),
(19, 'dasdasd dasda', 0, 0),
(20, 'dsada dasdasd', 0, 0),
(21, 'Amor Amor', 2, 62.5),
(22, 'Daniel Afranio Gaycha', 0, 0),
(23, 'Carlos Daniel', 1, 50),
(24, 'JOse Daniel', 1, 75),
(25, 'dg ad', 1, 0),
(26, 'Daniel A', 1, 75),
(27, 'Jose A', 1, 100),
(28, 'dasda das', 0, 0),
(29, 'Daniel Andres', 1, 80),
(30, 'Lester Sumba', 1, 80),
(31, 'Daniel Afranio Guaycha Apolinario', 0, 0),
(32, 'Usuario Uno', 1, 50),
(33, 'User Uno', 0, 0),
(34, 'User root', 1, 50);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `usuarios`
--

DROP TABLE IF EXISTS `usuarios`;
CREATE TABLE IF NOT EXISTS `usuarios` (
  `id_use` int(11) NOT NULL AUTO_INCREMENT,
  `nom_use` varchar(100) DEFAULT NULL,
  `ape_use` varchar(100) DEFAULT NULL,
  `user` varchar(50) DEFAULT NULL,
  `pass` varchar(50) DEFAULT NULL,
  `est_use` int(11) DEFAULT '1',
  `ema_use` varchar(100) DEFAULT NULL,
  `id_rol` int(11) DEFAULT NULL,
  `img_user` varchar(255) DEFAULT 'avatar.png',
  PRIMARY KEY (`id_use`),
  KEY `IX_Relationship2` (`id_rol`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=latin1;

--
-- Volcado de datos para la tabla `usuarios`
--

INSERT INTO `usuarios` (`id_use`, `nom_use`, `ape_use`, `user`, `pass`, `est_use`, `ema_use`, `id_rol`, `img_user`) VALUES
(1, 'User', 'Root', 'root', '202cb962ac59075b964b07152d234b70', 1, 'root@correo.com', 1, 'avatar.png'),
(2, 'Usuario', 'Uno', 'user1', '202cb962ac59075b964b07152d234b70', 1, 'user1@correo.com', 2, 'avatar.png');

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `evaluaciones`
--
ALTER TABLE `evaluaciones`
  ADD CONSTRAINT `subtema_evaluaciones` FOREIGN KEY (`id_sbt`) REFERENCES `subtemas` (`id_sbt`),
  ADD CONSTRAINT `temas_evaluaciones` FOREIGN KEY (`id_tem`) REFERENCES `temas` (`id_tem`);

--
-- Filtros para la tabla `literales`
--
ALTER TABLE `literales`
  ADD CONSTRAINT `preguntas_literales` FOREIGN KEY (`id_pre`) REFERENCES `preguntas` (`id_pre`) ON DELETE CASCADE;

--
-- Filtros para la tabla `notas`
--
ALTER TABLE `notas`
  ADD CONSTRAINT `evaluaciones_notas` FOREIGN KEY (`id_eva`) REFERENCES `evaluaciones` (`id_eva`),
  ADD CONSTRAINT `usuarios_notas` FOREIGN KEY (`id_use`) REFERENCES `usuarios` (`id_use`);

--
-- Filtros para la tabla `post`
--
ALTER TABLE `post`
  ADD CONSTRAINT `usuarios_post` FOREIGN KEY (`id_use`) REFERENCES `usuarios` (`id_use`) ON DELETE SET NULL;

--
-- Filtros para la tabla `preguntas`
--
ALTER TABLE `preguntas`
  ADD CONSTRAINT `evaluaciones_preguntas` FOREIGN KEY (`id_eva`) REFERENCES `evaluaciones` (`id_eva`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `referencias`
--
ALTER TABLE `referencias`
  ADD CONSTRAINT `post_referencias` FOREIGN KEY (`id_pos`) REFERENCES `post` (`id_pos`);

--
-- Filtros para la tabla `subtemas`
--
ALTER TABLE `subtemas`
  ADD CONSTRAINT `post_subtema` FOREIGN KEY (`id_pos`) REFERENCES `post` (`id_pos`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `temas_subtema` FOREIGN KEY (`id_tem`) REFERENCES `temas` (`id_tem`);

--
-- Filtros para la tabla `temas`
--
ALTER TABLE `temas`
  ADD CONSTRAINT `post_temas` FOREIGN KEY (`id_pos`) REFERENCES `post` (`id_pos`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `usuarios`
--
ALTER TABLE `usuarios`
  ADD CONSTRAINT `roles_usuarios` FOREIGN KEY (`id_rol`) REFERENCES `roles` (`id_rol`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
